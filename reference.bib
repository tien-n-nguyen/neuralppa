@article{britz2017massive,
	title={Massive exploration of neural machine translation architectures},
	author={Britz, Denny and Goldie, Anna and Luong, Minh-Thang and Le, Quoc},
	journal={arXiv preprint arXiv:1703.03906},
	year={2017}
}

@article{kim2014convolutional,
	title={Convolutional neural networks for sentence classification},
	author={Kim, Yoon},
	journal={arXiv preprint arXiv:1408.5882},
	year={2014}
}

@inproceedings{mechtaev2016angelix,
	title={Angelix: Scalable multiline program patch synthesis via symbolic analysis},
	author={Mechtaev, Sergey and Yi, Jooyong and Roychoudhury, Abhik},
	booktitle={Proceedings of the 38th international conference on software engineering},
	pages={691--701},
	year={2016}
}

@article{yuan2018arja,
	title={ARJA: Automated repair of java programs via multi-objective genetic programming},
	author={Yuan, Yuan and Banzhaf, Wolfgang},
	journal={IEEE Transactions on Software Engineering},
	year={2018},
	publisher={IEEE}
}

@inproceedings{tan2018repairing,
	title={Repairing crashes in android apps},
	author={Tan, Shin Hwei and Dong, Zhen and Gao, Xiang and Roychoudhury, Abhik},
	booktitle={2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE)},
	pages={187--198},
	year={2018},
	organization={IEEE}
}

@article{RNN,
	title={Learning phrase representations using RNN encoder-decoder for statistical machine translation},
	author={Cho, Kyunghyun and Van Merri{\"e}nboer, Bart and Gulcehre, Caglar and Bahdanau, Dzmitry and Bougares, Fethi and Schwenk, Holger and Bengio, Yoshua},
	journal={arXiv preprint arXiv:1406.1078},
	year={2014}
}

@online{Interpretation2021icse,
	title = {The GitHub Repository for This Study},
	year = 2021,
	url = {https://github.com/vulnerabilitydetection/VulnerabilityDetectionResearch},
}

@online{defects4j,
	title = {The Defects4J Data Set},
	year = 2019,
	url = {https://github.com/rjust/defects4j},
}

@online{sepsis-watch,
	title = {AI can help patients},
	year = 2022,
	url = {https://www.wired.com/story/ai-help-patients-doctors-understand/},
}

@article{yioopsla19,
author = {Li, Yi and Wang, Shaohua and Nguyen, Tien N. and Van Nguyen, Son},
title = {Improving Bug Detection via Context-Based Code Representation Learning and Attention-Based Neural Networks},
year = {2019},
issue_date = {October 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {3},
number = {OOPSLA},
url = {https://doi.org/10.1145/3360588},
doi = {10.1145/3360588},
journal = {Proc. ACM Program. Lang.},
month = oct,
articleno = {Article 162},
numpages = {30},
keywords = {Bug Detection, Attention Neural Networks, Deep Learning, Code Representation Learning, Network Embedding, Program Graphs}
}




@article{tai2015improved,
	title={Improved semantic representations from tree-structured long short-term memory networks},
	author={Tai, Kai Sheng and Socher, Richard and Manning, Christopher D},
	journal={arXiv preprint arXiv:1503.00075},
	year={2015}
}

@inproceedings{liu2019you,
author={Liu, Kui and Koyuncu, Anil and Bissyandé, Tegawendé F. and Kim, Dongsun and Klein, Jacques and Traon, Yves Le},
booktitle={Proceedings of the 12th IEEE Conference on Software Testing, Validation and Verification (ICST)},
title={You Cannot Fix What You Cannot Find! An Investigation of Fault Localization Bias in Benchmarking Automated Program Repair Systems},
year={2019},
volume={},
number={},
pages={102-113},
keywords={program debugging;software fault tolerance;software maintenance;fault localization bias;Defects4J;bug repair;tweaking;APR systems;automated program repair systems;kPAR repair tool;Tools;Computer bugs;Maintenance engineering;Benchmark testing;Pipelines;Reliability;Measurement;Automated Program Repair;Spectrum-based Fault Localization;Benchmarking;Empirical Assessment;Bias},
doi={10.1109/ICST.2019.00020},
ISSN={2159-4848},
month={April},}

@inproceedings{pearson2017evaluating,
  author={Pearson, Spencer and Campos, Jos{\'e} and Just, Ren{\'e} and Fraser, Gordon and Abreu, Rui and Ernst, Michael D and Pang, Deric and Keller, Benjamin},
booktitle={Proceedings of the 39th IEEE/ACM International Conference on Software Engineering (ICSE)},
title={Evaluating and Improving Fault Localization},
year={2017},
volume={},
number={},
pages={609-620},
keywords={program testing;source code (software);fault localization techniques;faulty program;suspicious code locations;defective code;replication study;spectrum-based families;mutation-based families;design space;Maintenance engineering;Tools;Debugging;Java;Computer bugs;Focusing;Manuals},
doi={10.1109/ICSE.2017.62},
ISSN={1558-1225},
month={May},}

@inproceedings{abreu2006evaluation,
author={Abreu, Rui and Zoeteweij, Peter and Gemund, Arjan J.c. Van},
booktitle={Proceedings of the 12th Pacific Rim International Symposium on Dependable Computing (PRDC)},
title={An Evaluation of Similarity Coefficients for Software Fault Localization},
year={2006},
volume={},
number={},
pages={39-46},
keywords={fault diagnosis;probability;program debugging;program diagnostics;software fault tolerance;similarity coefficients;software fault localization;automated software fault diagnosis;dependable software;program spectral approach;automated debugging tools;Pinpoint;Tarantula;AMPLE;molecular biology;ai coefficient;Siemens Suite;benchmark faults;probability ranking;Fault diagnosis;Software debugging;Software reliability;Computer bugs;Embedded system;Software testing;System testing;Particle measurements;Mathematics;Computer science},
doi={10.1109/PRDC.2006.18},
ISSN={null},
month={Dec},}

@inproceedings{xuan2014test,
	title={Test case purification for improving fault localization},
	author={Xuan, Jifeng and Monperrus, Martin},
	booktitle={Proceedings of the 22nd ACM SIGSOFT International Symposium on the Foundations of Software Engineering (FSE)},
	pages={52--63},
	year={2014},
	organization={ACM}
}

@inproceedings{liu2018lsrepair,
author={Liu, Kui and Koyuncu, Anil and and Kim, Kisub and Kim, Dongsun and Bissyandè, Tegawendé F.},
booktitle={Proceedings of the 25th Asia-Pacific Software Engineering Conference (APSEC)},
title={LSRepair: Live Search of Fix Ingredients for Automated Program Repair},
year={2018},
volume={},
number={},
pages={658-662},
keywords={program debugging;program diagnostics;program testing;search problems;software maintenance;LSRepair;live search;fix ingredients;automated program repair;faster fix process;search-based techniques;code search techniques;buggy code fragments;multiple-lines bugs fixing;Computer bugs;Maintenance engineering;Tools;Cloning;Search problems;Software;Semantics;Program repair, code search, fix ingredients},
doi={10.1109/APSEC.2018.00085},
ISSN={1530-1362},
month={Dec},}

@inproceedings{xin2017leveraging,
	author = {Xin, Qi and Reiss, Steven P.},
	title = {Leveraging Syntax-Related Code for Automated Program Repair},
	year = {2017},
	isbn = {9781538626849},
	publisher = {IEEE Press},
	booktitle = {Proceedings of the 32nd IEEE/ACM International Conference on Automated Software Engineering},
	pages = {660–670},
	numpages = {11},
	keywords = {code search, code transfer, Automated program repair},
	location = {Urbana-Champaign, IL, USA},
	series = {ASE 2017}
}

@inproceedings{xiong2017precise,
author={Xiong, Yingfei and Wang, Jie and Yan, Runfa and Zhang, Jiachen and Han, Shi and Huang, Gang and Zhang, Lu},
author={Xiong, Yingfei and Wang, Jie and Yan, Runfa and Zhang, Jiachen and Han, Shi and Huang, Gang and Zhang, Lu},
booktitle={Proceedings of the 39th IEEE/ACM International Conference on Software Engineering (ICSE)},
title={Precise Condition Synthesis for Program Repair},
year={2017},
volume={},
number={},
pages={416-426},
keywords={application program interfaces;document handling;fault location;program testing;software maintenance;sorting;precise condition synthesis;program repair system;automatic defect repair;weak test suites;sorting method;dependency relations;document analysis technique;API document;ACS;faulty locations;repair operation;Defects4J;Maintenance engineering;Text analysis;Benchmark testing;Java;Input variables;Software engineering;Software},
doi={10.1109/ICSE.2017.45},
ISSN={1558-1225},
month={May},}


@inproceedings{wen2018context,
	author = {Wen, Ming and Chen, Junjie and Wu, Rongxin and Hao, Dan and Cheung, Shing-Chi},
	title = {Context-Aware Patch Generation for Better Automated Program Repair},
	year = {2018},
	isbn = {9781450356381},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3180155.3180233},
	doi = {10.1145/3180155.3180233},
	booktitle = {Proceedings of the 40th International Conference on Software Engineering},
	pages = {1–11},
	numpages = {11},
	keywords = {context-aware, patch prioritization, automated program repair},
	location = {Gothenburg, Sweden},
	series = {ICSE}
}


@article{chakrabortycodit,
	title={CODIT: Code Editing with Tree-Based Neural Machine Translation},
	author={Chakraborty, Saikat and Allamanis, Miltiadis and Ray, Baishakhi},
	journal={arXiv preprint arXiv:1810.00314},
	year={2018}
}

@INPROCEEDINGS{cycle_training,
	author={J. {Zhu} and T. {Park} and P. {Isola} and A. A. {Efros}},
	booktitle={2017 IEEE International Conference on Computer Vision (ICCV)},
	title={Unpaired Image-to-Image Translation Using Cycle-Consistent Adversarial Networks},
	year={2017},
	volume={},
	number={},
	pages={2242-2251},
	keywords={computer vision;learning (artificial intelligence);cycle consistency loss;unpaired image-to-image translation;inverse mapping;image pair alignment;cycle-consistent adversarial networks;vision problem;graphics problem;learning;image distribution;adversarial loss;object transfiguration;collection style transfer;photo enhancement;Training;Painting;Training data;Semantics;Extraterrestrial measurements;Graphics},
	doi={10.1109/ICCV.2017.244},
	ISSN={2380-7504},
	month={Oct},}

@article{chen2018sequencer,
author={Chen, Zimin and Kommrusch, Steve James and Tufano, Michele and Pouchet, Louis-Noël and Poshyvanyk, Denys and Monperrus, Martin},
journal={IEEE Transactions on Software Engineering},
title={SEQUENCER: Sequence-to-Sequence Learning for End-to-End Program Repair},
year={2019},
volume={},
number={},
pages={1-1},
keywords={Maintenance engineering;Computer bugs;Vocabulary;Training;Natural languages;Benchmark testing;program repair;machine learning},
doi={10.1109/TSE.2019.2940179},
ISSN={2326-3881},
month={},}

@article{see2017get,
	title={Get to the point: Summarization with pointer-generator networks},
	author={See, Abigail and Liu, Peter J and Manning, Christopher D},
	journal={arXiv preprint arXiv:1704.04368},
	year={2017}
}

@inproceedings{white2016deep,
	title={Deep learning code fragments for code clone detection},
	author={White, Martin and Tufano, Michele and Vendome, Christopher and Poshyvanyk, Denys},
	booktitle={Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering (ASE)},
	pages={87--98},
	year={2016},
	organization={ACM}
}


@inproceedings{tufano2019learning,
	author={Tufano, Michele and Pantiuchina, Jevgenija and Watson, Cody and Bavota, Gabriele and Poshyvanyk, Denys},
	booktitle={Proceedings of the 41st IEEE/ACM International Conference on Software Engineering (ICSE)},
	title={On Learning Meaningful Code Changes Via Neural Machine Translation},
	year={2019},
	volume={},
	number={},
	pages={25-36},
	keywords={language translation;learning (artificial intelligence);program debugging;program testing;public domain software;software maintenance;statistical analysis;pull requests;pull request changes;bug-fixing activities;source code;maintenance tasks;nontrivial coding activities;NMT model;code components;code changes;vulnerabilities detection;neural machine translation model;qualitative analysis;Vocabulary;Crawlers;Computer bugs;Java;Data mining;Software engineering;Task analysis;Neural-Machine Translation;Empirical Study},
	doi={10.1109/ICSE.2019.00021},
	ISSN={0270-5257},
	month={May},}

@inproceedings{tufano2018empirical,
	author = {Tufano, Michele and Watson, Cody and Bavota, Gabriele and Di Penta, Massimiliano and White, Martin and Poshyvanyk, Denys},
	title = {An Empirical Investigation into Learning Bug-Fixing Patches in the Wild via Neural Machine Translation},
	year = {2018},
	isbn = {9781450359375},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3238147.3240732},
	doi = {10.1145/3238147.3240732},
	booktitle = {Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering},
	pages = {832–837},
	numpages = {6},
	keywords = {neural machine translation, bug-fixes},
	location = {Montpellier, France},
	series = {ASE 2018}
}



@article{hata2018learning,
	title={Learning to generate corrective patches using neural machine translation},
	author={Hata, Hideaki and Shihab, Emad and Neubig, Graham},
	journal={arXiv preprint arXiv:1812.07170},
	year={2018}
}

@inproceedings{gupta2017deepfix,
author = {Gupta, Rahul and Pal, Soham and Kanade, Aditya and Shevade, Shirish},
title = {DeepFix: Fixing Common C Language Errors by Deep Learning},
year = {2017},
publisher = {AAAI Press},
booktitle = {Proceedings of the Thirty-First AAAI Conference on Artificial Intelligence},
pages = {1345–1351},
numpages = {7},
location = {San Francisco, California, USA},
series = {AAAI’17}
}



@inproceedings{white2019sorting,
	author={White, Martin and Tufano, Michele and Martinez, Matias and Monperrus, Martin and Poshyvanyk, Denys},
	booktitle={Proceedings of the 26th IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)},
	title={Sorting and Transforming Program Repair Ingredients via Deep Learning Code Similarities},
	year={2019},
	volume={},
	number={},
	pages={479-490},
	keywords={Java;learning (artificial intelligence);neural nets;program debugging;public domain software;software maintenance;patch generation;code similarities;compilable ingredients;patch counts;DeepRepair patches;jGenProg patches;learning-based approach;deep learning code;automated program repair;redundancy-based program repair techniques;codebase;code fragments;code elements;suspicious statements;out-of-scope identifier mapping;program repair ingredients;redundancy-based repair techniques;Deep-Repair search strategy;buggy program revisions;deep learning;open-source Java projects;Maintenance engineering;Redundancy;Computer bugs;Deep learning;Transforms;Cloning;Sorting;software testing and debugging;program repair;deep learning;neural networks;code clones;language models},
	doi={10.1109/SANER.2019.8668043},
	ISSN={1534-5351},
	month={Feb},}


@inproceedings{liu2019avatar,
author={Liu, Kui and Koyuncu, Anil and Kim, Dongsun and Bissyandè, Tegawendé F.},
booktitle={Proceedings of the 26th IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)},
title={AVATAR: Fixing Semantic Bugs with Fix Patterns of Static Analysis Violations},
year={2019},
volume={},
number={},
pages={1-12},
keywords={genetic algorithms;program debugging;program diagnostics;program verification;semantic bugs;fix patterns;static analysis violations;fix pattern-based patch generation;acceptable patches;genetic programming;fix ingredients;fix changes;bug fixes;APR scenario;static bug detection tools;AVATAR APR system;AVATAR yields performance metrics;static bug finding tools;automated program repair;pattern-based APR systems;Computer bugs;Static analysis;Tools;Maintenance engineering;Avatars;Semantics;Reliability;Automated program repair;static analysis;fix pattern.},
doi={10.1109/SANER.2019.8667970},
ISSN={1534-5351},
month={Feb},}

@article{koyuncu2018fixminer,
	title={Fixminer: Mining relevant fix patterns for automated program repair},
	author={Koyuncu, Anil and Liu, Kui and Bissyand{\'e}, Tegawend{\'e} F and Kim, Dongsun and Klein, Jacques and Monperrus, Martin and Traon, Yves Le},
	journal={arXiv preprint arXiv:1810.01791},
	year={2018}
}

@inproceedings{Simfix,
	author = {Jiang, Jiajun and Xiong, Yingfei and Zhang, Hongyu and Gao, Qing and Chen, Xiangqun},
	title = {Shaping Program Repair Space with Existing Patches and Similar Code},
	year = {2018},
	isbn = {9781450356992},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3213846.3213871},
	doi = {10.1145/3213846.3213871},
	booktitle = {Proceedings of the 27th ACM SIGSOFT International Symposium on Software Testing and Analysis},
	pages = {298–309},
	numpages = {12},
	keywords = {code differencing, Automated program repair, code adaptation},
	location = {Amsterdam, Netherlands},
	series = {ISSTA 2018}
}

@inproceedings{wen2018context,
	title={Context-aware patch generation for better automated program repair},
	author={Wen, Ming and Chen, Junjie and Wu, Rongxin and Hao, Dan and Cheung, Shing-Chi},
	booktitle={Proceedings of the 40th IEEE/ACM International Conference on Software Engineering (ICSE)},
	pages={1--11},
	year={2018},
	organization={ACM}
}


@inproceedings{tan2016anti,
	author = {Tan, Shin Hwei and Yoshida, Hiroaki and Prasad, Mukul R. and Roychoudhury, Abhik},
	title = {Anti-Patterns in Search-Based Program Repair},
	year = {2016},
	isbn = {9781450342186},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/2950290.2950295},
	doi = {10.1145/2950290.2950295},
	booktitle = {Proceedings of the 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
	pages = {727–738},
	numpages = {12},
	keywords = {fault localization, and repair, Debugging},
	location = {Seattle, WA, USA},
	series = {FSE 2016}
}

@inproceedings{long2015staged,
	author = {Long, Fan and Rinard, Martin},
	title = {Staged Program Repair with Condition Synthesis},
	year = {2015},
	isbn = {9781450336758},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/2786805.2786811},
	doi = {10.1145/2786805.2786811},
	booktitle = {Proceedings of the 10th Joint Meeting on Foundations of Software Engineering},
	pages = {166–178},
	numpages = {13},
	keywords = {Program repair, Staged repair, Condition synthesis},
	location = {Bergamo, Italy},
	series = {ESEC/FSE 2015}
}

@inproceedings{saha2017elixir,
author={Saha, Ripon K and Lyu, Yingjun and Yoshida, Hiroaki and Prasad, Mukul R},
booktitle={Proceedings of the 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE)},
title={Elixir: Effective object-oriented program repair},
year={2017},
volume={},
number={},
pages={648-659},
keywords={learning (artificial intelligence);object-oriented programming;program debugging;OO-program bugs;generate- validate repair technique;-validate repair technique;called ELIXIR;expressive repair-expressions;synthesizing patches;repair space;machine-learnt model;concrete repairs;program context;potential repair location;bug report;popular Defects4J dataset;dataset Bugs.jar;correctly repaired bugs;state-of-the-art repair techniques;HD-Repair;PAR;object-oriented program repair;Maintenance engineering;Computer bugs;Java;Tools;Software;Object oriented modeling;Concrete},
doi={10.1109/ASE.2017.8115675},
ISSN={null},
month={Oct},}

@inproceedings{long2017automatic,
	author = {Long, Fan and Amidon, Peter and Rinard, Martin},
	title = {Automatic Inference of Code Transforms for Patch Generation},
	year = {2017},
	isbn = {9781450351058},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3106237.3106253},
	doi = {10.1145/3106237.3106253},
	booktitle = {Proceedings of the 11th Joint Meeting on Foundations of Software Engineering},
	pages = {727–739},
	numpages = {13},
	keywords = {Search space inference, Patch Generation, Code transform},
	location = {Paderborn, Germany},
	series = {ESEC/FSE 2017}
}

@inproceedings{long2016automatic,
author = {Long, Fan and Rinard, Martin},
title = {Automatic Patch Generation by Learning Correct Code},
year = {2016},
isbn = {9781450335492},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2837614.2837617},
doi = {10.1145/2837614.2837617},
booktitle = {Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
pages = {298–312},
numpages = {15},
keywords = {Code correctness model, Learning correct code, Program repair},
location = {St. Petersburg, FL, USA},
series = {POPL ’16}
}

@inproceedings{smith2015cure,
author = {Smith, Edward K. and Barr, Earl T. and Le Goues, Claire and Brun, Yuriy},
title = {Is the Cure Worse than the Disease? Overfitting in Automated Program Repair},
year = {2015},
isbn = {9781450336758},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2786805.2786825},
doi = {10.1145/2786805.2786825},
booktitle = {Proceedings of the 10th Joint Meeting on Foundations of Software Engineering},
pages = {532–543},
numpages = {12},
keywords = {independent evaluation, TrpAutoRepair, empirical evaluation, IntroClass, GenProg, automated program repair},
location = {Bergamo, Italy},
series = {ESEC/FSE 2015}
}



@inproceedings{le2016history,
author={Le, Xuan Bach D. and Lo, David and Goues, Claire Le},
booktitle={Proceedings of the 23rd IEEE International Conference on Software Analysis, Evolution, and Reengineering (SANER)},
title={History Driven Program Repair},
year={2016},
volume={1},
number={},
pages={213-224},
keywords={data mining;Java;mathematical operators;program debugging;program testing;random processes;search problems;software maintenance;history driven program repair;automated program repair techniques;APR techniques;multicore cloud environment;bug fix pattern mining;mutation operators;fix candidates;buggy program;random search process;Java programs;History;Maintenance engineering;Computer bugs;Java;Software;Data mining;Testing;Automated Program Repair;Mutation Testing;Graph Mining},
doi={10.1109/SANER.2016.76},
ISSN={null},
month={March},}

@inproceedings{kim2013automatic,
	title={Automatic patch generation learned from human-written patches},
	author={Kim, Dongsun and Nam, Jaechang and Song, Jaewoo and Kim, Sunghun},
	booktitle={Proceedings of the 28th IEEE/ACM International Conference on Automated Software Engineering (ICSE)},
	pages={802--811},
	year={2013},
	organization={IEEE Press}
}

@article{le2011genprog,
author={Goues, Claire Le and Nguyen, ThanhVu and Forrest, Stephanie and Weimer, Westley},
journal={IEEE Transactions on Software Engineering},
title={GenProg: A Generic Method for Automatic Software Repair},
year={2012},
volume={38},
number={1},
pages={54-72},
keywords={formal specification;genetic algorithms;software maintenance;GenProg;automatic software repair;defects repair;legacy programs;formal specifications;program annotations;special coding practices;genetic programming;Maintenance engineering;Encoding;Computer bugs;Automatic programming;Debugging;Syntactics;Automatic programming;corrections;testing and debugging.},
doi={10.1109/TSE.2011.104},
ISSN={2326-3881},
month={Jan},}

@inproceedings{qi2014strength,
	author = {Qi, Yuhua and Mao, Xiaoguang and Lei, Yan and Dai, Ziying and Wang, Chengsong},
	title = {The Strength of Random Search on Automated Program Repair},
	year = {2014},
	isbn = {9781450327565},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/2568225.2568254},
	doi = {10.1145/2568225.2568254},
	booktitle = {Proceedings of the 36th International Conference on Software Engineering},
	pages = {254–265},
	numpages = {12},
	keywords = {random search, genetic programming, Automated program repair, search-based software engineering},
	location = {Hyderabad, India},
	series = {ICSE 2014}
}

@inproceedings{martinez2016astor,
author = {Martinez, Matias and Monperrus, Martin},
title = {ASTOR: A Program Repair Library for Java (Demo)},
year = {2016},
isbn = {9781450343909},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2931037.2948705},
doi = {10.1145/2931037.2948705},
booktitle = {Proceedings of the 25th International Symposium on Software Testing and Analysis},
pages = {441–444},
numpages = {4},
keywords = {Automated software repair, software defects},
location = {Saarbr\"{u}cken, Germany},
series = {ISSTA 2016}
}


@inproceedings{nguyen2013semfix,
author={Nguyen, Hoang Duong Thien and Qi, Dawei and Roychoudhury, Abhik and Chandra, Satish},
booktitle={Proceedings of the 35th International Conference on Software Engineering (ICSE)},
title={SemFix: Program repair via semantic analysis},
year={2013},
volume={},
number={},
pages={772-781},
keywords={genetic algorithms;program debugging;program testing;software engineering;SemFix;automated program repair methods;semantic analysis;debugging;software development project;symbolic execution;constraint solving;program synthesis;repair expressions;repair code complexity;genetic programming based repair;SIR programs;seeded bugs;GNU Coreutils;Maintenance engineering;Computer bugs;Genetic programming;Input variables;Semantics;Syntactics;Educational institutions},
doi={10.1109/ICSE.2013.6606623},
ISSN={1558-1225},
month={May},}

@Misc{soot,
	howpublished = {\url{https://sable.github.io/soot/}},
	note = {Last Accessed July 11, 2019},
	title = {Soot Introduction.},
	author = {Soot}
}

@Misc{WALA,
	howpublished = {\url{http://wala.sourceforge.net/wiki/index.php/Main_Page}},
	note = {Last Accessed July 11, 2019},
	title = {WALA Documentation.},
	author = {WALA}
}

@inproceedings{Kildall-1973,
	title={A unified approach to global program optimization},
	author={Kildall, Gary A},
	booktitle={Proceedings of the 1st annual ACM SIGACT-SIGPLAN symposium on Principles of programming languages},
	pages={194--206},
	year={1973},
	organization={ACM}
}

@inproceedings{ayewah-2007,
	title={Evaluating static analysis defect warnings on production software},
	author={Ayewah, Nathaniel and Pugh, William and Morgenthaler, J David and Penix, John and Zhou, YuQian},
	booktitle={Proceedings of the 7th ACM SIGPLAN-SIGSOFT workshop on Program analysis for software tools and engineering},
	pages={1--8},
	year={2007},
	organization={ACM}
}

@inproceedings{dagenais-2008,
	title={Enabling static analysis for partial java programs},
	author={Dagenais, Barth{\'e}l{\'e}my and Hendren, Laurie},
	booktitle={ACM Sigplan Notices},
	volume={43},
	number={10},
	pages={313--328},
	year={2008},
	organization={ACM}
}

@inproceedings{mockus-2000,
	title={Identifying Reasons for Software Changes using Historic Databases.},
	author={Mockus, Audris and Votta, Lawrence G},
	booktitle={Proceedings of the International Conference on Software Maintenance},
	pages={120--130},
	year={2000}
}

@inproceedings{krizhevsky-2012,
	title={Imagenet classification with deep lutional neural networks},
	author={Krizhevsky, Alex and Sutskever, Ilya and Hinton, Geoffrey E},
	booktitle={Proceedings of the Neural Information Processing Systems},
	pages={1097--1105},
	year={2012}
}

@inproceedings{ray-2014,
	title={A large scale study of programming languages and code quality in github},
	author={Ray, Baishakhi and Posnett, Daryl and Filkov, Vladimir and Devanbu, Premkumar},
	booktitle={Proceedings of the 22nd ACM SIGSOFT International Symposium on the Foundations of Software Engineering (FSE)},
	pages={155--165},
	year={2014},
	organization={ACM}
}

@inproceedings{ray-2016,
	title={On the" naturalness" of buggy code},
	author={Ray, Baishakhi and Hellendoorn, Vincent and Godhane, Saheel and Tu, Zhaopeng and Bacchelli, Alberto and Devanbu, Premkumar},
	booktitle={Proceedings of the 38th IEEE/ACM International Conference on Software Engineering (ICSE)},
	pages={428--439},
	year={2016},
	organization={IEEE}
}

@inproceedings{Bian-2018,
	title={NAR-miner: discovering negative association rules from code for bug detection},
	author={Bian, Pan and Liang, Bin and Shi, Wenchang and Huang, Jianjun and Cai, Yan},
	booktitle={Proceedings of the 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE)},
	pages={411--422},
	year={2018}
}


@article{Pradel-2018,
	title={DeepBugs: A learning approach to name-based bug detection},
	author={Pradel, Michael and Sen, Koushik},
	journal={Proceedings of the ACM on Programming Languages},
	volume={2},
	number={OOPSLA},
	pages={1--25},
	year={2018},
	publisher={ACM New York, NY, USA}
}
---
@article{Alon-2018,
  author    = {Uri Alon and
               Meital Zilberstein and
               Omer Levy and
               Eran Yahav},
  title     = {code2vec: Learning Distributed Representations of Code},
  journal   = {CoRR},
  volume    = {abs/1803.09473},
  year      = {2018},
  url       = {http://arxiv.org/abs/1803.09473},
  archivePrefix = {arXiv},
  eprint    = {1803.09473},
  timestamp = {Mon, 13 Aug 2018 16:47:34 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1803-09473},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Ferrante-1987,
 author = {Ferrante, Jeanne and Ottenstein, Karl J. and Warren, Joe D.},
 title = {The Program Dependence Graph and Its Use in Optimization},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {July 1987},
 volume = {9},
 number = {3},
 month = jul,
 year = {1987},
 issn = {0164-0925},
 pages = {319--349},
 numpages = {31},
 url = {http://doi.acm.org/10.1145/24039.24041},
 doi = {10.1145/24039.24041},
 acmid = {24041},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{Edward-1975,
 author = {Yourdon, Edward},
 title = {Structured Programming and Structured Design As Art Forms},
 booktitle = {Proceedings of the May 19-22, 1975, National Computer Conference and Exposition},
 series = {AFIPS},
 year = {1975},
 location = {Anaheim, California},
 pages = {277--277},
 numpages = {1},
 url = {http://doi.acm.org/10.1145/1499949.1499997},
 doi = {10.1145/1499949.1499997},
 acmid = {1499997},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{Cho-2014,
  author    = {Kyunghyun Cho and
               Bart van Merrienboer and
               {\c{C}}aglar G{\"{u}}l{\c{c}}ehre and
               Fethi Bougares and
               Holger Schwenk and
               Yoshua Bengio},
  title     = {Learning Phrase Representations using {RNN} Encoder-Decoder for Statistical
               Machine Translation},
  journal   = {CoRR},
  volume    = {abs/1406.1078},
  year      = {2014},
  url       = {http://arxiv.org/abs/1406.1078},
  archivePrefix = {arXiv},
  eprint    = {1406.1078},
  timestamp = {Mon, 13 Aug 2018 16:46:44 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/ChoMGBSB14},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Yin-2016,
  author    = {Wenpeng Yin and
               Hinrich Sch{\"{u}}tze and
               Bing Xiang and
               Bowen Zhou},
  title     = {{ABCNN:} Attention-Based Convolutional Neural Network for Modeling
               Sentence Pairs},
  journal   = {CoRR},
  volume    = {abs/1512.05193},
  year      = {2015},
  url       = {http://arxiv.org/abs/1512.05193},
  archivePrefix = {arXiv},
  eprint    = {1512.05193},
  timestamp = {Mon, 13 Aug 2018 16:47:36 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/YinSXZ15},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Grover-2016,
  author    = {Aditya Grover and
               Jure Leskovec},
  title     = {node2vec: Scalable Feature Learning for Networks},
  journal   = {CoRR},
  volume    = {abs/1607.00653},
  year      = {2016},
  url       = {http://arxiv.org/abs/1607.00653},
  archivePrefix = {arXiv},
  eprint    = {1607.00653},
  timestamp = {Mon, 13 Aug 2018 16:48:14 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/GroverL16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Mikolov-2013,
  author    = {Tomas Mikolov and
               Ilya Sutskever and
               Kai Chen and
               Greg Corrado and
               Jeffrey Dean},
  title     = {Distributed Representations of Words and Phrases and their Compositionality},
  journal   = {CoRR},
  volume    = {abs/1310.4546},
  year      = {2013},
  url       = {http://arxiv.org/abs/1310.4546},
  archivePrefix = {arXiv},
  eprint    = {1310.4546},
  timestamp = {Mon, 13 Aug 2018 16:47:09 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/MikolovSCCD13},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@incollection{LeCun-1989,
author = {Cun, Yann Le and Galland, Conrad C. and Hinton, Geoffrey E.},
title = {GEMINI: Gradient Estimation through Matrix Inversion after Noise Injection},
year = {1989},
isbn = {1558600159},
publisher = {Morgan Kaufmann Publishers Inc.},
address = {San Francisco, CA, USA},
booktitle = {Advances in Neural Information Processing Systems 1},
pages = {141–148},
numpages = {8}
}

@inproceedings{LeCun-1989,
	title={GEMINI: gradient estimation through matrix inversion after noise injection},
	author={Le Cun, Yann and Galland, Conrad C and Hinton, Geoffrey E},
	booktitle={Proceeding of the Neural Information Processing Systems (NIPS)},
	pages={141--148},
	year={1989}
}

@article{Vaswani-2017,
  author    = {Ashish Vaswani and
               Noam Shazeer and
               Niki Parmar and
               Jakob Uszkoreit and
               Llion Jones and
               Aidan N. Gomez and
               Lukasz Kaiser and
               Illia Polosukhin},
  title     = {Attention Is All You Need},
  journal   = {CoRR},
  volume    = {abs/1706.03762},
  year      = {2017},
  url       = {http://arxiv.org/abs/1706.03762},
  archivePrefix = {arXiv},
  eprint    = {1706.03762},
  timestamp = {Mon, 13 Aug 2018 16:48:37 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/VaswaniSPUJGKP17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Allen-1970,
 author = {Allen, Frances E.},
 title = {Control Flow Analysis},
 journal = {SIGPLAN Not.},
 issue_date = {July 1970},
 volume = {5},
 number = {7},
 month = jul,
 year = {1970},
 issn = {0362-1340},
 pages = {1--19},
 numpages = {19},
 url = {http://doi.acm.org/10.1145/390013.808479},
 doi = {10.1145/390013.808479},
 acmid = {808479},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@ARTICLE{Callahan-1990, 
author={D. {Callahan} and A. {Carle} and M. W. {Hall} and K. {Kennedy}}, 
journal={IEEE Transactions on Software Engineering}, 
title={Constructing the procedure call multigraph}, 
year={1990}, 
volume={16}, 
number={4}, 
pages={483-487}, 
keywords={parallel programming;procedure call multigraph;algorithm;precise call multigraph;recursion;upper bound;polynomial;Throughput;Delay;Databases;Concurrency control;Flow graphs;Information retrieval;Erbium;Etching;Upper bound}, 
doi={10.1109/32.54302}, 
ISSN={0098-5589}, 
month={April},}

@inproceedings{Wang-2016,
 author = {Wang, Song and Chollak, Devin and Movshovitz-Attias, Dana and Tan, Lin},
 title = {Bugram: Bug Detection with N-gram Language Models},
 booktitle = {Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering},
 series = {ASE 2016},
 year = {2016},
 isbn = {978-1-4503-3845-5},
 location = {Singapore, Singapore},
 pages = {708--719},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2970276.2970341},
 doi = {10.1145/2970276.2970341},
 acmid = {2970341},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Bug Detection, N-gram Language Model, Static Code Analysis},
} 

@inproceedings{Zhao-2018,
 author = {Zhao, Gang and Huang, Jeff},
 title = {DeepSim: Deep Learning Code Functional Similarity},
 booktitle = {Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
 series = {ESEC/FSE 2018},
 year = {2018},
 isbn = {978-1-4503-5573-5},
 location = {Lake Buena Vista, FL, USA},
 pages = {141--151},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/3236024.3236068},
 doi = {10.1145/3236024.3236068},
 acmid = {3236068},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Classification, Code functional similarity, Control/Data flow, Deep Learning},
} 

@article{Henkel-2018,
  author    = {Jordan Henkel and
               Shuvendu Lahiri and
               Ben Liblit and
               Thomas W. Reps},
  title     = {Code Vectors: Understanding Programs Through Embedded Abstracted Symbolic
               Traces},
  journal   = {CoRR},
  volume    = {abs/1803.06686},
  year      = {2018},
  url       = {http://arxiv.org/abs/1803.06686},
  archivePrefix = {arXiv},
  eprint    = {1803.06686},
  timestamp = {Mon, 13 Aug 2018 16:47:19 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1803-06686},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Tufano-2018,
 author = {Tufano, Michele and Watson, Cody and Bavota, Gabriele and Di Penta, Massimiliano and White, Martin and Poshyvanyk, Denys},
 title = {Deep Learning Similarities from Different Representations of Source Code},
 booktitle = {Proceedings of the 15th International Conference on Mining Software Repositories},
 series = {MSR},
 year = {2018},
 isbn = {978-1-4503-5716-6},
 location = {Gothenburg, Sweden},
 pages = {542--553},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/3196398.3196431},
 doi = {10.1145/3196398.3196431},
 acmid = {3196431},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {code similarities, deep learning, neural networks},
} 

@article{Tai-2015,
  author    = {Kai Sheng Tai and
               Richard Socher and
               Christopher D. Manning},
  title     = {Improved Semantic Representations From Tree-Structured Long Short-Term
               Memory Networks},
  journal   = {CoRR},
  volume    = {abs/1503.00075},
  year      = {2015},
  url       = {http://arxiv.org/abs/1503.00075},
  archivePrefix = {arXiv},
  eprint    = {1503.00075},
  timestamp = {Mon, 13 Aug 2018 16:48:20 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/TaiSM15},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Engler-2001,
 author = {Engler, Dawson and Chen, David Yu and Hallem, Seth and Chou, Andy and Chelf, Benjamin},
 title = {Bugs As Deviant Behavior: A General Approach to Inferring Errors in Systems Code},
 journal = {SIGOPS Oper. Syst. Rev.},
 issue_date = {Dec. 2001},
 volume = {35},
 number = {5},
 month = oct,
 year = {2001},
 issn = {0163-5980},
 pages = {57--72},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/502059.502041},
 doi = {10.1145/502059.502041},
 acmid = {502041},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{Li-2005,
 author = {Li, Zhenmin and Zhou, Yuanyuan},
 title = {PR-Miner: Automatically Extracting Implicit Programming Rules and Detecting Violations in Large Software Code},
 journal = {SIGSOFT Softw. Eng. Notes},
 issue_date = {September 2005},
 volume = {30},
 number = {5},
 month = sep,
 year = {2005},
 issn = {0163-5948},
 pages = {306--315},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1095430.1081755},
 doi = {10.1145/1095430.1081755},
 acmid = {1081755},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated specification generation, automated violation detection, data mining for software engineering, pattern recognition, programming rules, static analysis},
} 

@inproceedings{Wasylkowski-2017,
 author = {Wasylkowski, Andrzej and Zeller, Andreas and Lindig, Christian},
 title = {Detecting Object Usage Anomalies},
 booktitle = {Proceedings of the the 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering},
 series = {ESEC/FSE},
 year = {2007},
 isbn = {978-1-59593-811-4},
 location = {Dubrovnik, Croatia},
 pages = {35--44},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1287624.1287632},
 doi = {10.1145/1287624.1287632},
 acmid = {1287632},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated defect detection, automated specification generation, data mining for software engineering, object usage anomalies, pattern recognition, programming rules, static analysis},
} 

@inproceedings{Nguyen-2009,
 author = {Nguyen, Tung Thanh and Nguyen, Hoan Anh and Pham, Nam H. and Al-Kofahi, Jafar M. and Nguyen, Tien N.},
 title = {Graph-based Mining of Multiple Object Usage Patterns},
 booktitle = {Proceedings of the the 7th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering},
 series = {ESEC/FSE},
 year = {2009},
 isbn = {978-1-60558-001-2},
 location = {Amsterdam, The Netherlands},
 pages = {383--392},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1595696.1595767},
 doi = {10.1145/1595696.1595767},
 acmid = {1595767},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {anomaly, api usage, clone, graph mining, groum, object usage, pattern},
} 

@InProceedings{Bielik-2016,
  title = 	 {PHOG: Probabilistic Model for Code},
  author = 	 {Pavol Bielik and Veselin Raychev and Martin Vechev},
  booktitle = 	 {Proceedings of The 33rd International Conference on Machine Learning},
  pages = 	 {2933--2942},
  year = 	 {2016},
  editor = 	 {Maria Florina Balcan and Kilian Q. Weinberger},
  volume = 	 {48},
  series = 	 {Proceedings of Machine Learning Research},
  address = 	 {New York, New York, USA},
  month = 	 {20--22 Jun},
  publisher = 	 {PMLR},
  pdf = 	 {http://proceedings.mlr.press/v48/bielik16.pdf},
  url = 	 {http://proceedings.mlr.press/v48/bielik16.html},
  abstract = 	 {We introduce a new generative model for code called probabilistic higher order grammar (PHOG). PHOG generalizes probabilistic context free grammars (PCFGs) by allowing conditioning of a production rule beyond the parent non-terminal, thus capturing rich contexts relevant to programs. Even though PHOG is more powerful than a PCFG, it can be learned from data just as efficiently. We trained a PHOG model on a large JavaScript code corpus and show that it is more precise than existing models, while similarly fast. As a result, PHOG can immediately benefit existing programming tools based on probabilistic models of code.}
}

@article{Bhatia-2016,
  author    = {Sahil Bhatia and
               Rishabh Singh},
  title     = {Automated Correction for Syntax Errors in Programming Assignments
               using Recurrent Neural Networks},
  journal   = {CoRR},
  volume    = {abs/1603.06129},
  year      = {2016},
  url       = {http://arxiv.org/abs/1603.06129},
  archivePrefix = {arXiv},
  eprint    = {1603.06129},
  timestamp = {Mon, 13 Aug 2018 16:46:25 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/BhatiaS16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Patra-2016,
  title={Learning to Fuzz: Application-Independent Fuzz Testing with Probabilistic, Generative Models of Input Data},
  author={Jibesh Patra and Michael Pradel},
  year={2016}
}

@article{Amodio-2017,
  author    = {Matthew Amodio and
               Swarat Chaudhuri and
               Thomas W. Reps},
  title     = {Neural Attribute Machines for Program Generation},
  journal   = {CoRR},
  volume    = {abs/1705.09231},
  year      = {2017},
  url       = {http://arxiv.org/abs/1705.09231},
  archivePrefix = {arXiv},
  eprint    = {1705.09231},
  timestamp = {Mon, 13 Aug 2018 16:46:40 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/AmodioCR17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{White-2016,
author = {White, Martin and Tufano, Michele and Vendome, Christopher and Poshyvanyk, Denys},
title = {Deep Learning Code Fragments for Code Clone Detection},
year = {2016},
isbn = {9781450338455},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2970276.2970326},
doi = {10.1145/2970276.2970326},
booktitle = {Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering},
pages = {87–98},
numpages = {12},
keywords = {deep learning, language models, abstract syntax trees, code clone detection, neural networks, machine learning},
location = {Singapore, Singapore},
series = {ASE}
}

@article{Mou-2014,
  author    = {Lili Mou and
               Ge Li and
               Zhi Jin and
               Lu Zhang and
               Tao Wang},
  title     = {{TBCNN:} {A} Tree-Based Convolutional Neural Network for Programming
               Language Processing},
  journal   = {CoRR},
  volume    = {abs/1409.5718},
  year      = {2014},
  url       = {http://arxiv.org/abs/1409.5718},
  archivePrefix = {arXiv},
  eprint    = {1409.5718},
  timestamp = {Mon, 13 Aug 2018 16:47:17 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/MouLJZW14},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Allamanis-2017,
  author    = {Miltiadis Allamanis and
               Earl T. Barr and
               Premkumar T. Devanbu and
               Charles A. Sutton},
  title     = {A Survey of Machine Learning for Big Code and Naturalness},
  journal   = {CoRR},
  volume    = {abs/1709.06182},
  year      = {2017},
  url       = {http://arxiv.org/abs/1709.06182},
  archivePrefix = {arXiv},
  eprint    = {1709.06182},
  timestamp = {Mon, 13 Aug 2018 16:48:48 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1709-06182},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Allamanis-2016,
  author    = {Miltiadis Allamanis and
               Hao Peng and
               Charles A. Sutton},
  title     = {A Convolutional Attention Network for Extreme Summarization of Source
               Code},
  journal   = {CoRR},
  volume    = {abs/1602.03001},
  year      = {2016},
  url       = {http://arxiv.org/abs/1602.03001},
  archivePrefix = {arXiv},
  eprint    = {1602.03001},
  timestamp = {Mon, 13 Aug 2018 16:49:16 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/AllamanisPS16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Allamanis-2017b,
  author    = {Miltiadis Allamanis and
               Marc Brockschmidt and
               Mahmoud Khademi},
  title     = {Learning to Represent Programs with Graphs},
  journal   = {CoRR},
  volume    = {abs/1711.00740},
  year      = {2017},
  url       = {http://arxiv.org/abs/1711.00740},
  archivePrefix = {arXiv},
  eprint    = {1711.00740},
  timestamp = {Mon, 13 Aug 2018 16:46:52 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1711-00740},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{fase09,
 author = {Nguyen, Hoan Anh and Nguyen, Tung Thanh and Pham, Nam H. and Al-Kofahi, Jafar M. and Nguyen, Tien N.},
 title = {Accurate and Efficient Structural Characteristic Feature Extraction for Clone Detection},
 booktitle = {Proceedings of the 12th International Conference on Fundamental Approaches to Software Engineering: Held As Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2009},
 series = {FASE},
 year = {2009},
 pages = {440--455},
 publisher = {Springer-Verlag},
} 

@article{Jin-2012,
 author = {Jin, Guoliang and Song, Linhai and Shi, Xiaoming and Scherpelz, Joel and Lu, Shan},
 title = {Understanding and Detecting Real-world Performance Bugs},
 journal = {SIGPLAN Not.},
 issue_date = {June 2012},
 volume = {47},
 number = {6},
 month = jun,
 year = {2012},
 issn = {0362-1340},
 pages = {77--88},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2345156.2254075},
 doi = {10.1145/2345156.2254075},
 acmid = {2254075},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {characteristics study, performance bugs, rule-based bug detection},
} 

@article{Olivo-2015,
 author = {Olivo, Oswaldo and Dillig, Isil and Lin, Calvin},
 title = {Static Detection of Asymptotic Performance Bugs in Collection Traversals},
 journal = {SIGPLAN Not.},
 issue_date = {June 2015},
 volume = {50},
 number = {6},
 month = jun,
 year = {2015},
 issn = {0362-1340},
 pages = {369--378},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2813885.2737966},
 doi = {10.1145/2813885.2737966},
 acmid = {2737966},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {performance bugs, program analysis, static analysis},
} 

@article{Livshits-2005,
 author = {Livshits, Benjamin and Zimmermann, Thomas},
 title = {DynaMine: Finding Common Error Patterns by Mining Software Revision Histories},
 journal = {SIGSOFT Softw. Eng. Notes},
 issue_date = {September 2005},
 volume = {30},
 number = {5},
 month = sep,
 year = {2005},
 issn = {0163-5948},
 pages = {296--305},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1095430.1081754},
 doi = {10.1145/1095430.1081754},
 acmid = {1081754},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {coding patterns, data mining, dynamic analysis, error patterns, one-line ceck-ins, revision histories, software bugs},
} 

@inproceedings{Gruska-2010,
 author = {Gruska, Natalie and Wasylkowski, Andrzej and Zeller, Andreas},
 title = {Learning from 6,000 Projects: Lightweight Cross-project Anomaly Detection},
 booktitle = {Proceedings of the 19th International Symposium on Software Testing and Analysis},
 series = {ISSTA},
 year = {2010},
 isbn = {978-1-60558-823-0},
 location = {Trento, Italy},
 pages = {119--130},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1831708.1831723},
 doi = {10.1145/1831708.1831723},
 acmid = {1831723},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {formal concept analysis, language independent parsing, lightweight parsing, mining specifications, temporal properties},
} 

@inproceedings{naturalness-icse12,
 author = {Hindle, Abram and Barr, Earl T. and Su, Zhendong and Gabel, Mark and Devanbu, Premkumar},
 title = {On the Naturalness of Software},
 booktitle = {Proceedings of the 34th International Conference on Software Engineering},
 series = {ICSE},
 year = {2012},
 isbn = {978-1-4673-1067-3},
 pages = {837--847},
 numpages = {11},
 url = {http://dl.acm.org/citation.cfm?id=2337223.2337322},
 acmid = {2337322},
 publisher = {IEEE Press},
} 

@article{Engler-2001,
 author = {Engler, Dawson and Chen, David Yu and Hallem, Seth and Chou, Andy and Chelf, Benjamin},
 title = {Bugs As Deviant Behavior: A General Approach to Inferring Errors in Systems Code},
 journal = {SIGOPS Oper. Syst. Rev.},
 issue_date = {Dec. 2001},
 volume = {35},
 number = {5},
 month = oct,
 year = {2001},
 issn = {0163-5980},
 pages = {57--72},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/502059.502041},
 doi = {10.1145/502059.502041},
 acmid = {502041},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{Cole-2006,
 author = {Cole, Brian and Hakim, Daniel and Hovemeyer, David and Lazarus, Reuven and Pugh, William and Stephens, Kristin},
 title = {Improving Your Software Using Static Analysis to Find Bugs},
 booktitle = {Companion to the 21st ACM SIGPLAN Symposium on Object-oriented Programming Systems, Languages, and Applications},
 series = {OOPSLA},
 year = {2006},
 isbn = {1-59593-491-X},
 location = {Portland, Oregon, USA},
 pages = {673--674},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/1176617.1176667},
 doi = {10.1145/1176617.1176667},
 acmid = {1176667},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {FindBugs, Java, static analysis},
} 

@InProceedings{Toman-2017,
  author =	{John Toman and Dan Grossman},
  title =	{{Taming the Static Analysis Beast}},
  booktitle =	{2nd Summit on Advances in Programming Languages (SNAPL 2017)},
  pages =	{18:1--18:14},
  series =	{Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN =	{978-3-95977-032-3},
  ISSN =	{1868-8969},
  year =	{2017},
  volume =	{71},
  editor =	{Benjamin S. Lerner and Rastislav Bod{\'i}k and Shriram Krishnamurthi},
  publisher =	{Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{http://drops.dagstuhl.de/opus/volltexte/2017/7121},
  URN =		{urn:nbn:de:0030-drops-71213},
  doi =		{10.4230/LIPIcs.SNAPL.2017.18},
  annote =	{Keywords: static analysis, frameworks, api knowledge, library specifications}
}

@inproceedings{Smith-2009,
  title={Detecting and Measuring Similarity in Code Clones},
  author={Randy Smith and Susan Horwitz},
  year={2009}
}

@INPROCEEDINGS{Li-2017, 
author={Liuqing Li and He Feng and Wenjie Zhuang and Na Meng and Barbara Ryder}, 
booktitle={2017 IEEE International Conference on Software Maintenance and Evolution (ICSME)}, 
title={CCLearner: A Deep Learning-Based Clone Detection Approach}, 
year={2017}, 
volume={}, 
number={}, 
pages={249-260}, 
keywords={learning (artificial intelligence);pattern classification;program debugging;program diagnostics;public domain software;software maintenance;software reusability;source code (software);trees (mathematics);competitive clone detection effectiveness;CCLearner;CCLEARNER;deep learning-based clone detection approach;software development;code reuse;programming productivity;software maintenance;bug fixes;program changes;code locations;clone detection tools;source code tokenization;tree-matching algorithms;abstract syntax trees;AST;token-based clone detection approach;method-level code clones;codebase;classifier training;BigCloneBench;Cloning;Feature extraction;Machine learning;Neural networks;Tools;Training;Testing;deep learning;clone detection;empirical}, 
doi={10.1109/ICSME.2017.46}, 
ISSN={}, 
month={Sep.},}

@inproceedings{Wang-2016b,
 author = {Wang, Song and Liu, Taiyue and Tan, Lin},
 title = {Automatically Learning Semantic Features for Defect Prediction},
 booktitle = {Proceedings of the 38th International Conference on Software Engineering},
 series = {ICSE},
 year = {2016},
 isbn = {978-1-4503-3900-1},
 location = {Austin, Texas},
 pages = {297--308},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2884781.2884804},
 doi = {10.1145/2884781.2884804},
 acmid = {2884804},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@INPROCEEDINGS{Liang-2016, 
author={Bin Liang and Pan Bian and Yan Zhang and Wenchang Shi and Wei You and Yan Cai}, 
booktitle={2016 IEEE/ACM 38th International Conference on Software Engineering (ICSE)}, 
title={AntMiner: Mining More Bugs by Reducing Noise Interference}, 
year={2016}, 
volume={}, 
number={}, 
pages={333-344}, 
keywords={data mining;Linux;operating system kernels;program debugging;program slicing;AntMiner approach;noise interference reduction;bug detection;code mining;source code preprocessing;program slicing technique;semantics-equivalent representation;Linux kernel;Coverity tool;Computer bugs;Data mining;Kernel;Programming;Linux;Databases;Bug detection;Code mining;Program slicing}, 
doi={10.1145/2884781.2884870}, 
ISSN={1558-1225}, 
month={May},}

@article{Kim-2018,
  author    = {Hyeji Kim and
               Yihan Jiang and
               Sreeram Kannan and
               Sewoong Oh and
               Pramod Viswanath},
  title     = {Deepcode: Feedback Codes via Deep Learning},
  journal   = {CoRR},
  volume    = {abs/1807.00801},
  year      = {2018},
  url       = {http://arxiv.org/abs/1807.00801},
  archivePrefix = {arXiv},
  eprint    = {1807.00801},
  timestamp = {Mon, 13 Aug 2018 16:48:32 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1807-00801},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Yang-2015,
 author = {Yang, Shuo and Luo, Ping and Loy, Chen Change and Shum, Kenneth W. and Tang, Xiaoou},
 title = {Deep Representation Learning with Target Coding},
 booktitle = {Proceedings of the Twenty-Ninth AAAI Conference on Artificial Intelligence},
 series = {AAAI},
 year = {2015},
 isbn = {0-262-51129-0},
 location = {Austin, Texas},
 pages = {3848--3854},
 numpages = {7},
 url = {http://dl.acm.org/citation.cfm?id=2888116.2888250},
 acmid = {2888250},
 publisher = {AAAI Press},
} 


@inproceedings{Nam-2015,
 author = {Nam, Jaechang and Kim, Sunghun},
 title = {Heterogeneous Defect Prediction},
 booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
 series = {ESEC/FSE 2015},
 year = {2015},
 isbn = {978-1-4503-3675-8},
 location = {Bergamo, Italy},
 pages = {508--519},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2786805.2786814},
 doi = {10.1145/2786805.2786814},
 acmid = {2786814},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Defect prediction, heterogeneous metrics, quality assurance},
}

@inproceedings{Hovemeyer-2007,
 author = {Hovemeyer, David and Pugh, William},
 title = {Finding More Null Pointer Bugs, but Not Too Many},
 booktitle = {Proceedings of the 7th ACM SIGPLAN-SIGSOFT Workshop on Program Analysis for Software Tools and Engineering},
 series = {PASTE},
 year = {2007},
 isbn = {978-1-59593-595-3},
 location = {San Diego, California, USA},
 pages = {9--14},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/1251535.1251537},
 doi = {10.1145/1251535.1251537},
 acmid = {1251537},
 publisher = {ACM},
} 

@online{ProjectWebsite-2019,
  title = {The GitHub Repository for This Study},
  year = 2019,
  url = {https://github.com/OOPSLA-2019-BugDetection/OOPSLA-2019-BugDetection},
}

@inproceedings{word2vec,
  author    = {Tomas Mikolov and
               Ilya Sutskever and
               Kai Chen and
               Gregory S. Corrado and
               Jeffrey Dean},
  title     = {Distributed Representations of Words and Phrases and their Compositionality},
  booktitle = {27th Annual Conference on Neural Information Processing Systems 2013 (NIPS)},
  pages     = {3111--3119},
  year      = {2013},
}

@inproceedings{wan-ase18,
author = {Wan, Yao and Zhao, Zhou and Yang, Min and Xu, Guandong and Ying, Haochao and Wu, Jian and Yu, Philip S.},
title = {Improving Automatic Source Code Summarization via Deep Reinforcement Learning},
year = {2018},
isbn = {9781450359375},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3238147.3238206},
doi = {10.1145/3238147.3238206},
booktitle = {Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering},
pages = {397–407},
numpages = {11},
keywords = {deep learning, Code summarization, reinforcement learning, comment generation},
location = {Montpellier, France},
series = {ASE 2018}
}

@inproceedings{icse10,
 author = {Nguyen, Tung Thanh and Nguyen, Hoan Anh and Pham, Nam H. and Al-Kofahi, Jafar and Nguyen, Tien N.},
 title = {Recurring Bug Fixes in Object-Oriented Programs},
 year = {2010},
 isbn = {9781605587196},
 publisher = {Association for Computing Machinery},
 address = {New York, NY, USA},
 url = {https://doi.org/10.1145/1806799.1806847},
 doi = {10.1145/1806799.1806847},
 booktitle = {Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering - Volume 1},
 pages = {315–324},
 numpages = {10},
 location = {Cape Town, South Africa},
 series = {ICSE}
}



@inproceedings{ray-fse12,
author = {Ray, Baishakhi and Kim, Miryung},
title = {A Case Study of Cross-System Porting in Forked Projects},
year = {2012},
isbn = {9781450316149},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2393596.2393659},
doi = {10.1145/2393596.2393659},
booktitle = {Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering},
articleno = {Article 53},
numpages = {11},
keywords = {porting, software evolution, forking, repetitive changes, code clones},
location = {Cary, North Carolina},
series = {FSE}
}

@inproceedings{LeGoues-icse12,
author={Goues, Claire Le and Dewey-Vogt, Michael and Forrest, Stephanie and Weimer, Westley},
booktitle={Proceedings of the 34th International Conference on Software Engineering (ICSE)},
title={A systematic study of automated program repair: Fixing 55 out of 105 bugs for \$8 each},
year={2012},
volume={},
number={},
pages={3-13},
keywords={C language;cloud computing;genetic algorithms;program debugging;public domain software;software cost estimation;software maintenance;automated program repair;program bug;real-world program;repair cost;GenProg;genetic programming;defect repair;off-the-shelf C program;algorithmic improvement;cloud computing resource;grounded human-competitive cost measurement;systematic evaluation;open-source program;Maintenance engineering;Computer bugs;Cloud computing;Benchmark testing;Systematics;Open source software;Genetic programming;genetic programming;automated program repair;cloud computing},
doi={10.1109/ICSE.2012.6227211},
ISSN={0270-5257},
month={June}}

@inproceedings{tbar-issta19,
author = {Liu, Kui and Koyuncu, Anil and Kim, Dongsun and Bissyand\'{e}, Tegawend\'{e} F.},
title = {TBar: Revisiting Template-Based Automated Program Repair},
year = {2019},
isbn = {9781450362245},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3293882.3330577},
doi = {10.1145/3293882.3330577},
booktitle = {Proceedings of the 28th ACM SIGSOFT International Symposium on Software Testing and Analysis},
pages = {31–42},
numpages = {12},
keywords = {Automated program repair, empirical assessment, fix pattern},
location = {Beijing, China},
series = {ISSTA}
}
@inproceedings{saha2018bugs,
author={Saha, Ripon K. and Lyu, Yingjun and Lam, Wing and Yoshida, Hiroaki and Prasad, Mukul R.},
booktitle={Proceedings of the 15th IEEE/ACM International Conference on Mining Software Repositories (MSR)},
title={Bugs.jar: A Large-Scale, Diverse Dataset of Real-World Java Bugs},
year={2018},
volume={},
number={},
pages={10-13},
keywords={Java;program debugging;program testing;public domain software;software tools;large-scale dataset;Bugs.jar;real-world Java bugs;opensource Java projects;Java program testing;third-party tools;Computer bugs;Java;Software;Tools;Libraries;Debugging;Testing;Reproducible Bugs;Large Scale Dataset;Java Programs},
doi={},
ISSN={2574-3848},
month={May},}

@online{AutoFix2019,
	title = {The GitHub Repository for This Study},
	year = 2019,
	url = {https://github.com/ICSE-2019-AUTOFIX/ICSE-2019-AUTOFIX},
}

@online{defects4j,
	title = {The Defects4J Data Set},
	year = 2019,
	url = {https://github.com/rjust/defects4j},
}


@inproceedings{fse16,
author = {Nguyen, Anh Tuan and Hilton, Michael and Codoban, Mihai and Nguyen, Hoan Anh and Mast, Lily and Rademacher, Eli and Nguyen, Tien N. and Dig, Danny},
title = {API Code Recommendation Using Statistical Learning from Fine-Grained Changes},
year = {2016},
isbn = {9781450342186},
publisher = {Association for Computing Machinery},
url = {https://doi.org/10.1145/2950290.2950333},
doi = {10.1145/2950290.2950333},
booktitle = {Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
pages = {511–522},
numpages = {12},
series = {FSE 2016}
}



@article{getafix19,
author = {Bader, Johannes and Scott, Andrew and Pradel, Michael and Chandra, Satish},
title = {Getafix: Learning to Fix Bugs Automatically},
year = {2019},
issue_date = {October 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {3},
number = {OOPSLA},
url = {https://doi.org/10.1145/3360585},
doi = {10.1145/3360585},
journal = {Proc. ACM Program. Lang.},
month = oct,
articleno = {Article 159},
numpages = {27},
keywords = {Code transform, Patch generation, Automated program repair}
}

@inproceedings{hercules-icse19,
author = {Saha, Seemanta and Saha, Ripon K. and Prasad, Mukul R.},
title = {Harnessing Evolution for Multi-Hunk Program Repair},
year = {2019},
publisher = {IEEE Press},
doi = {10.1109/ICSE.2019.00020},
url = {https://doi.org/10.1145/3360588}
booktitle = {Proceedings of the 41st International Conference on Software Engineering},
pages = {13–24},
numpages = {12},
series = {ICSE ’19}
}

@article{hercules2,
	title={Harnessing Evolution for Multi-Hunk Program Repair},
	author={Saha, Seemanta and Saha, Ripon K and Prasad, Mukul R},
	journal={arXiv preprint arXiv:1906.08903},
	year={2019}
}

@inproceedings{icse20,
author = {Yi Li, and Shaohua Wang, and Tien N. Nguyen},
title = {DLFix: Context-based Code Transformation Learning for Automated Program Repair},
year = {2020},
publisher = {ACM Press},
booktitle = {Proceedings of the 42nd International Conference on Software Engineering},
numpages = {12},
series = {ICSE ’20}
}

@inproceedings{icse20-methodname,
author = {Son Nguyen and Hung Dang Phan and Trinh Le and Tien N. Nguyen},
title = {Suggesting Natural Method Names to Check Name Consistencies},
year = {2020},
publisher = {ACM Press},
booktitle = {Proceedings of the 42nd International Conference on Software Engineering},
numpages = {12},
series = {ICSE ’20}
}

@inproceedings{icse19-cpatminer,
author = {Nguyen, Hoan Anh and Nguyen, Tien N. and Dig, Danny and Nguyen, Son and Tran, Hieu and Hilton, Michael},
title = {Graph-Based Mining of in-the-Wild, Fine-Grained, Semantic Code Change Patterns},
year = {2019},
publisher = {IEEE Press},
url = {https://doi.org/10.1109/ICSE.2019.00089},
doi = {10.1109/ICSE.2019.00089},
booktitle = {Proceedings of the 41st International Conference on Software Engineering},
pages = {819–830},
numpages = {12},
series = {ICSE ’19}
}

@inproceedings{glove2014,
  author = {Jeffrey Pennington and Richard Socher and Christopher D. Manning},
  booktitle = {Empirical Methods in Natural Language Processing (EMNLP)},
  title = {GloVe: Global Vectors for Word Representation},
  year = {2014},
  pages = {1532--1543},
  url = {http://www.aclweb.org/anthology/D14-1162},
}

@misc{treecaps,
    title={TreeCaps: Tree-Structured Capsule Networks for Program Source Code Processing},
    author={Vinoj Jayasundara and Nghi Duy Quoc Bui and Lingxiao Jiang and David Lo},
    year={2019},
    eprint={1910.12306},
    archivePrefix={arXiv},
    primaryClass={cs.LG}
}


@online{BufferOverFlow,
	title = {CWE-120: Buffer Overflow},
	year = nd,
	url = {https://cwe.mitre.org/data/definitions/120.html},
}



@online{SQLInj,
	title = {CWE-89: SQL Injection},
	year = nd,
	url = {https://cwe.mitre.org/data/definitions/89.html},
}

@online{Cross-siteScripting,
	title = {CWE-79: Cross-site Scripting},
	year = nd,
	url = {http://cwe.mitre.org/data/definitions/79.html},
}

@online{AuthBypassSpoofing,
	title = {CWE-290: Authentication Bypass by Spoofing},
	year = nd,
	url = {https://cwe.mitre.org/data/definitions/290.html},
}

@online{CWE,
	title = {Common Weakness Enumeration (CWE)},
	year = nd,
	url = {https://cwe.mitre.org/},
}

@online{CVE,
	title = {Common Vulnerability Enumeration (CVE)},
	year = nd,
	url = {https://cve.mitre.org/},
}

@online{checkmarx22,
	title = {Checkmarx},
	year = nd,
	url = {https://checkmarx.com/},
}

@online{anaconda,
	title = {Anaconda},
	year = nd,
	url = {https://www.anaconda.com/products/distribution},
}


@inproceedings{pham2010detection,
	title={Detection of recurring software vulnerabilities},
	author={Pham, Nam H. and Nguyen, Tung Thanh and Nguyen, Hoan Anh and Nguyen, Tien N.},
	booktitle={Proceedings of the IEEE/ACM international conference on Automated software engineering},
	pages={447--456},
	year={2010}
}


@inproceedings{fse09,
author = {Nguyen, Tung Thanh and Nguyen, Hoan Anh and Pham, Nam H. and Al-Kofahi, Jafar M. and Nguyen, Tien N.},
title = {Graph-Based Mining of Multiple Object Usage Patterns},
year = {2009},
isbn = {9781605580012},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1595696.1595767},
doi = {10.1145/1595696.1595767},
booktitle = {Proceedings of the 7th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering},
pages = {383–392},
numpages = {10},
location = {Amsterdam, The Netherlands},
series = {ESEC/FSE '09}
}

@inproceedings{ase10,
author = {Pham, Nam H. and Nguyen, Tung Thanh and Nguyen, Hoan Anh and Nguyen, Tien N.},
title = {Detection of Recurring Software Vulnerabilities},
year = {2010},
isbn = {9781450301169},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1858996.1859089},
doi = {10.1145/1858996.1859089},
booktitle = {Proceedings of the IEEE/ACM International Conference on Automated Software Engineering},
pages = {447–456},
numpages = {10},
series = {ASE '10}
}

@INPROCEEDINGS{bowman-vgraph,
  author={Bowman, Benjamin and Huang, H. Howie},
  booktitle={2020 IEEE European Symposium on Security and Privacy (EuroS\&P)}, 
  title={VGRAPH: A Robust Vulnerable Code Clone Detection System Using Code Property Triplets}, 
  year={2020},
  volume={},
  number={},
  pages={53-69},
  doi={10.1109/EuroSP48549.2020.00012}}

@inproceedings{fse21,
author = {Li, Yi and Wang, Shaohua and Nguyen, Tien N.},
title = {Vulnerability Detection with Fine-Grained Interpretations},
booktitle = {Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
year = {2021},
pages = {292–303},
numpages = {12}
}

@inproceedings{lemna18,
author = {Guo, Wenbo and Mu, Dongliang and Xu, Jun and Su, Purui and Wang, Gang and Xing, Xinyu},
title = {LEMNA: Explaining Deep Learning Based Security Applications},
year = {2018},
isbn = {9781450356930},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3243734.3243792},
doi = {10.1145/3243734.3243792},
booktitle = {Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security},
pages = {364–379},
numpages = {16},
keywords = {explainable AI, binary analysis, deep recurrent neural networks},
location = {Toronto, Canada},
series = {CCS '18}
}


@article{10.1145/966049.777394,
author = {Allen, Matthew and Horwitz, Susan},
title = {Slicing Java Programs That Throw and Catch Exceptions},
year = {2003},
issue_date = {October 2003},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {38},
number = {10},
issn = {0362-1340},
url = {https://doi.org/10.1145/966049.777394},
doi = {10.1145/966049.777394},
abstract = {Exceptions are the preferred method for error handling in object-oriented languages like Java. Current program-slicing algorithms do not correctly deal with exception-handling constructs, because they do not account for the additional control and data dependences introduced by exceptions. This paper extends previous work on program slicing using the system dependence graph (SDG) to support slicing programs with exceptions.},
journal = {SIGPLAN Not.},
month = {jun},
pages = {44–54},
numpages = {11},
keywords = {program dependence graph, program slicing, java exceptions}
}


@inproceedings{efg,
author = {Allen, Matthew and Horwitz, Susan},
title = {Slicing Java Programs That Throw and Catch Exceptions},
year = {2003},
isbn = {1581136676},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/777388.777394},
doi = {10.1145/777388.777394},
booktitle = {Proceedings of the 2003 ACM SIGPLAN Workshop on Partial Evaluation and Semantics-Based Program Manipulation},
pages = {44–54},
numpages = {11},
series = {PEPM '03}
}

@inproceedings{codefill-icse22,
author = {Izadi, Maliheh and Gismondi, Roberta and Gousios, Georgios},
title = {CodeFill: Multi-Token Code Completion by Jointly Learning from Structure and Naming Sequences},
year = {2022},
isbn = {9781450392211},
publisher = {ACM Press},
booktitle = {Proceedings of the 44th International Conference on Software Engineering},
pages = {401–412},
numpages = {12},
series = {ICSE '22}
}

@article{pdt,
author = {Ferrante, Jeanne and Ottenstein, Karl J. and Warren, Joe D.},
title = {The Program Dependence Graph and Its Use in Optimization},
year = {1987},
issue_date = {July 1987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {9},
number = {3},
issn = {0164-0925},
url = {https://doi.org/10.1145/24039.24041},
doi = {10.1145/24039.24041},
journal = {ACM Trans. Program. Lang. Syst.},
month = {jul},
pages = {319–349},
numpages = {31}
}

@INPROCEEDINGS{pos-sun11,
  author={Sun, Ming and Bellegarda, Jerome R.},
  booktitle={2011 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP)}, 
  title={Improved pos tagging for text-to-speech synthesis}, 
  year={2011},
  volume={},
  number={},
  pages={5384-5387},
  doi={10.1109/ICASSP.2011.5947575}}

@INPROCEEDINGS{ankita-18,
  author={Ankita and Abdul Nazeer, K. A.},
  booktitle={2018 International Conference on Computing, Power and Communication Technologies (GUCON)}, 
  title={Part-of-speech Tagging and Named Entity Recognition Using Improved Hidden Markov Model and Bloom Filter}, 
  year={2018},
  volume={},
  number={},
  pages={1072-1077},
  doi={10.1109/GUCON.2018.8674901}}

@article{verdi-tse22,
  author    = {Morteza Verdi and
               Ashkan Sami and
               Jafar Akhondali and
               Foutse Khomh and
               Gias Uddin and
               Alireza Karami Motlagh},
  title     = {An Empirical Study of {C++} Vulnerabilities in Crowd-Sourced Code
               Examples},
  journal   = {{IEEE} Trans. Software Eng.},
  volume    = {48},
  number    = {5},
  pages     = {1497--1514},
  year      = {2022},
  url       = {https://doi.org/10.1109/TSE.2020.3023664},
  doi       = {10.1109/TSE.2020.3023664},
}

@inproceedings{icse18,
author = {Phan, Hung and Nguyen, Hoan Anh and Tran, Ngoc M. and Truong, Linh H. and Nguyen, Anh Tuan and Nguyen, Tien N.},
title = {Statistical Learning of API Fully Qualified Names in Code Snippets of Online Forums},
year = {2018},
isbn = {9781450356381},
publisher = {ACM Press},
booktitle = {Proceedings of the 40th International Conference on Software Engineering},
pages = {632–642},
series = {ICSE '18}
}

@inproceedings{10.1145/1449764.1449790,
author = {Dagenais, Barth\'{e}l\'{e}my and Hendren, Laurie},
title = {Enabling Static Analysis for Partial Java Programs},
year = {2008},
isbn = {9781605582153},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1449764.1449790},
doi = {10.1145/1449764.1449790},
abstract = {Software engineering tools often deal with the source code of programs retrieved from the web or source code repositories. Typically, these tools only have access to a subset of a program's source code (one file or a subset of files) which makes it difficult to build a complete and typed intermediate representation (IR). Indeed, for incomplete object-oriented programs, it is not always possible to completely disambiguate the syntactic constructs and to recover the declared type of certain expressions because the declaration of many types and class members are not accessible.We present a framework that performs partial type inference and uses heuristics to recover the declared type of expressions and resolve ambiguities in partial Java programs. Our framework produces a complete and typed IR suitable for further static analysis. We have implemented this framework and used it in an empirical study on four large open source systems which shows that our system recovers most declared types with a low error rate, even when only one class is accessible.},
booktitle = {Proceedings of the 23rd ACM SIGPLAN Conference on Object-Oriented Programming Systems Languages and Applications},
pages = {313–328},
numpages = {16},
keywords = {java, partial programs, type inference},
location = {Nashville, TN, USA},
series = {OOPSLA '08}
}


@article{ppa08,
author = {Dagenais, Barth\'{e}l\'{e}my and Hendren, Laurie},
title = {Enabling Static Analysis for Partial Java Programs},
year = {2008},
issue_date = {September 2008},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {43},
number = {10},
issn = {0362-1340},
url = {https://doi.org/10.1145/1449955.1449790},
doi = {10.1145/1449955.1449790},
journal = {SIGPLAN Not.},
month = {oct},
pages = {313–328},
numpages = {16},
}

@inproceedings{codefill-icse22,
author = {Izadi, Maliheh and Gismondi, Roberta and Gousios, Georgios},
title = {CodeFill: Multi-Token Code Completion by Jointly Learning from Structure and Naming Sequences},
year = {2022},
isbn = {9781450392211},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3510003.3510172},
doi = {10.1145/3510003.3510172},
booktitle = {Proceedings of the 44th International Conference on Software Engineering},
pages = {401–412},
numpages = {12},
series = {ICSE '22}
}

@inproceedings{facebook-icse21,
author = {Kim, Seohyun and Zhao, Jinman and Tian, Yuchi and Chandra, Satish},
title = {Code Prediction by Feeding Trees to Transformers},
year = {2021},
isbn = {9781450390859},
publisher = {IEEE Press},
url = {https://doi.org/10.1109/ICSE43902.2021.00026},
doi = {10.1109/ICSE43902.2021.00026},
booktitle = {Proceedings of the 43rd International Conference on Software Engineering},
pages = {150–162},
numpages = {13},
series = {ICSE '21}
}

@inproceedings{euler-fse19,
author = {Chaparro, Oscar and Bernal-C\'{a}rdenas, Carlos and Lu, Jing and Moran, Kevin and Marcus, Andrian and Di Penta, Massimiliano and Poshyvanyk, Denys and Ng, Vincent},
title = {Assessing the Quality of the Steps to Reproduce in Bug Reports},
year = {2019},
publisher = {ACM Press},
booktitle = {Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
pages = {86–96},
numpages = {11},
series = {ESEC/FSE 2019}
}

@INPROCEEDINGS{icpc17,
  author={Lam, An Ngoc and Nguyen, Anh Tuan and Nguyen, Hoan Anh and Nguyen, Tien N.},
  booktitle={2017 IEEE/ACM 25th International Conference on Program Comprehension (ICPC)}, 
  title={Bug Localization with Combination of Deep Learning and Information Retrieval}, 
  year={2017},
  volume={},
  number={},
  pages={218-229},
  doi={10.1109/ICPC.2017.24}}

@inproceedings{msr16,
author = {Nguyen, Anh Tuan and Nguyen, Hoan Anh and Nguyen, Tien N.},
title = {A Large-Scale Study on Repetitiveness, Containment, and Composability of Routines in Open-Source Projects},
year = {2016},
isbn = {9781450341868},
publisher = {ACM Press},
booktitle = {Proceedings of the 13th International Conference on Mining Software Repositories},
pages = {362–373},
numpages = {12},
series = {MSR '16}
}



@article{pdg,
author = {Ferrante, Jeanne and Ottenstein, Karl J. and Warren, Joe D.},
title = {The Program Dependence Graph and Its Use in Optimization},
year = {1987},
issue_date = {July 1987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {9},
number = {3},
issn = {0164-0925},
url = {https://doi.org/10.1145/24039.24041},
doi = {10.1145/24039.24041},
journal = {ACM Trans. Program. Lang. Syst.},
month = {jul},
pages = {319–349},
numpages = {31}
}

@article{wu2022vulcnn,
  title={VulCNN: An Image-inspired Scalable Vulnerability Detection System},
  author={Wu, Yueming and Zou, Deqing and Dou, Shihan and Yang, Wei and Xu, Duo and Jin, Hai},
  year={2022}
}

 @misc{so-post,
  title={},
  url={https://stackoverflow.com/a/10702464},
  journal={},
  author={},
  year={},
  month={}
  }

@inproceedings{chen-manning-2014-fast,
    title = "A Fast and Accurate Dependency Parser using Neural Networks",
    author = "Chen, Danqi  and
      Manning, Christopher",
    booktitle = "Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing ({EMNLP})",
    month = oct,
    year = "2014",
    address = "Doha, Qatar",
    publisher = "Association for Computational Linguistics",
    url = "https://aclanthology.org/D14-1082",
    doi = "10.3115/v1/D14-1082",
    pages = "740--750",
}

@misc{41224,
title	= {Efficient Estimation of Word Representations in Vector Space},
author	= {Tomas Mikolov and Kai Chen and Greg S. Corrado and Jeffrey Dean},
year	= {2013},
URL	= {http://arxiv.org/abs/1301.3781}
}

@INPROCEEDINGS{joern-2014,
  author={Yamaguchi, Fabian and Golde, Nico and Arp, Daniel and Rieck, Konrad},
  booktitle={2014 IEEE Symposium on Security and Privacy}, 
  title={Modeling and Discovering Vulnerabilities with Code Property Graphs}, 
  year={2014},
  volume={},
  number={},
  pages={590-604},
  doi={10.1109/SP.2014.44}}

  @article{radford2019language,
  title={Language models are unsupervised multitask learners},
  author={Radford, Alec and Wu, Jeffrey and Child, Rewon and Luan, David and Amodei, Dario and Sutskever, Ilya and others},
  journal={OpenAI blog},
  volume={1},
  number={8},
  pages={9},
  year={2019}
}

@article{liu2019roberta,
  title={Roberta: A robustly optimized bert pretraining approach},
  author={Liu, Yinhan and Ott, Myle and Goyal, Naman and Du, Jingfei and Joshi, Mandar and Chen, Danqi and Levy, Omer and Lewis, Mike and Zettlemoyer, Luke and Stoyanov, Veselin},
  journal={arXiv preprint arXiv:1907.11692},
  year={2019}
}

@inproceedings{githubCorpus2013,
	author={Allamanis, Miltiadis and Sutton, Charles},
	title={{Mining Source Code Repositories at Massive Scale using Language Modeling}},
	booktitle={10th Working Conf. on Mining Software Repositories},	
	year={2013},
	pages={207--216},
	organization={IEEE}
}

@online{deeppda,
	title = {},
	year = nd,
	url = {https://github.com/deeppda-icse23/DeepPDA/},
}

@inproceedings{clark-etal-2019-bert,
    title = "What Does {BERT} Look at? An Analysis of {BERT}{'}s Attention",
    author = "Clark, Kevin  and
      Khandelwal, Urvashi  and
      Levy, Omer  and
      Manning, Christopher D.",
    booktitle = "Proceedings of the 2019 ACL Workshop BlackboxNLP: Analyzing and Interpreting Neural Networks for NLP",
    month = aug,
    year = "2019",
    address = "Florence, Italy",
    publisher = "Association for Computational Linguistics",
    url = "https://aclanthology.org/W19-4828",
    doi = "10.18653/v1/W19-4828",
    pages = "276--286",
}

@inproceedings{baah-issta08-probabilistic,
author = {Baah, George K. and Podgurski, Andy and Harrold, Mary Jean},
title = {The Probabilistic Program Dependence Graph and Its Application to Fault Diagnosis},
year = {2008},
isbn = {9781605580500},
publisher = {ACM Press},
booktitle = {Proceedings of the 2008 International Symposium on Software Testing and Analysis},
pages = {189–200},
numpages = {12},
series = {ISSTA '08}
}

@article{yu-jss17-bayesian,
author = {Yu, Xiao and Liu, Jin and Yang, Zijiang and Liu, Xiao},
title = {The Bayesian Network Based Program Dependence Graph and Its Application to Fault Localization},
year = {2017},
issue_date = {December 2017},
publisher = {Elsevier Science Inc.},
address = {USA},
volume = {134},
number = {C},
issn = {0164-1212},
url = {https://doi.org/10.1016/j.jss.2017.08.025},
doi = {10.1016/j.jss.2017.08.025},
journal = {J. Syst. Softw.},
month = {dec},
pages = {44–53},
numpages = {10},
keywords = {Bayesian network, Fault localization, Program analysis}
}

@inproceedings{feng-paste10,
author = {Feng, Min and Gupta, Rajiv},
title = {Learning Universal Probabilistic Models for Fault Localization},
year = {2010},
isbn = {9781450300827},
publisher = {ACM Press},
booktitle = {Proceedings of the 9th ACM SIGPLAN-SIGSOFT Workshop on Program Analysis for Software Tools and Engineering},
pages = {81–88},
numpages = {8},
location = {Toronto, Ontario, Canada},
series = {PASTE '10}
}

@INPROCEEDINGS{lee-scam19-moad,
  author={Lee, Seongmin and Binkley, David and Feldt, Robert and Gold, Nicolas and Yoo, Shin},
  booktitle={2019 19th International Working Conference on Source Code Analysis and Manipulation (SCAM)}, 
  title={MOAD: Modeling Observation-Based Approximate Dependency}, 
  year={2019},
  volume={},
  number={},
  pages={12-22},
  doi={10.1109/SCAM.2019.00011}}

@inproceedings{lee-icse20,
author = {Lee, Seongmin},
title = {Scalable and Approximate Program Dependence Analysis},
year = {2020},
isbn = {9781450371223},
publisher = {ACM Press},
booktitle = {Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering: Companion Proceedings},
pages = {162–165},
numpages = {4},
series = {ICSE '20}
}

@article{lee-jss20,
author = {Lee, Seongmin and Binkley, David and Gold, Nicolas and Islam, Syed and Krinke, Jens and Yoo, Shin},
title = {Evaluating Lexical Approximation of Program Dependence},
year = {2020},
issue_date = {Feb 2020},
publisher = {Elsevier Science Inc.},
address = {USA},
volume = {160},
number = {C},
issn = {0164-1212},
url = {https://doi.org/10.1016/j.jss.2019.110459},
doi = {10.1016/j.jss.2019.110459},
journal = {J. Syst. Softw.},
month = {feb},
numpages = {22},
}


@inproceedings{icse15,
author = {Nguyen, Anh Tuan and Nguyen, Tien N.},
title = {Graph-Based Statistical Language Model for Code},
year = {2015},
isbn = {9781479919345},
publisher = {IEEE Press},
booktitle = {Proceedings of the 37th International Conference on Software Engineering - Volume 1},
pages = {858–868},
numpages = {11},
location = {Florence, Italy},
series = {ICSE '15}
}

@misc{https://doi.org/10.48550/arxiv.2206.11719,
  doi = {10.48550/ARXIV.2206.11719},
  url = {https://arxiv.org/abs/2206.11719},
  author = {López, José Antonio Hernández and Weyssow, Martin and Cuadrado, Jesús Sánchez and Sahraoui, Houari},
  keywords = {Computation and Language (cs.CL), Artificial Intelligence (cs.AI), Machine Learning (cs.LG), Programming Languages (cs.PL), Software Engineering (cs.SE), FOS: Computer and information sciences, FOS: Computer and information sciences},
  title = {AST-Probe: Recovering abstract syntax trees from hidden representations of pre-trained language models},  
  publisher = {arXiv},
  year = {2022},
  copyright = {Creative Commons Attribution 4.0 International}
}

@inproceedings{10.1145/2338965.2336773,
author = {Geldenhuys, Jaco and Dwyer, Matthew B. and Visser, Willem},
title = {Probabilistic Symbolic Execution},
year = {2012},
isbn = {9781450314541},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2338965.2336773},
doi = {10.1145/2338965.2336773},
booktitle = {Proceedings of the 2012 International Symposium on Software Testing and Analysis},
pages = {166–176},
numpages = {11},
location = {Minneapolis, MN, USA},
series = {ISSTA 2012}
}

@book{Myers.2012,
  abstract = {The classic, landmark work on software testing The hardware and software of computing have changed markedly in the three decades since the first edition of The Art of Software Testing, but this book's powerful underlying analysis has stood the test of time. Whereas most books on software testing target particular development techniques, languages, or testing methods, The Art of Software Testing, Third Edition provides a brief but powerful and comprehensive presentation of time-proven software testing approaches. If your software development project is mission critical, this book is an investme},
  added-at = {2013-10-18T15:41:42.000+0200},
  address = {Hoboken and N.J},
  author = {Myers, Glenford J. and Sandler, Corey and Badgett, Tom},
  biburl = {https://www.bibsonomy.org/bibtex/2e0210c841672327e9b813ae343a6a5ec/hlackner},
  edition = {3rd ed},
  interhash = {5bbef13681629321c1413317cc075fb4},
  intrahash = {e0210c841672327e9b813ae343a6a5ec},
  keywords = {Computer_software Debugging_in_computer_science COMPUTERS},
  publisher = {John Wiley \& Sons},
  timestamp = {2013-10-18T15:41:42.000+0200},
  title = {The art of software testing},
  year = 2012
}


@inproceedings{fse21,
author = {Li, Yi and Wang, Shaohua and Nguyen, Tien N.},
title = {Vulnerability Detection with Fine-Grained Interpretations},
year = {2021},
isbn = {9781450385626},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3468264.3468597},
doi = {10.1145/3468264.3468597},
booktitle = {Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
pages = {292–303},
numpages = {12},
series = {ESEC/FSE 2021}
}

@inproceedings{genius16,
author = {Feng, Qian and Zhou, Rundong and Xu, Chengcheng and Cheng, Yao and Testa, Brian and Yin, Heng},
title = {Scalable Graph-Based Bug Search for Firmware Images},
year = {2016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2976749.2978370},
doi = {10.1145/2976749.2978370},
booktitle = {Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security},
pages = {480–491},
numpages = {12},
series = {CCS '16}
}

@inproceedings{gimini17,
author = {Xu, Xiaojun and Liu, Chang and Feng, Qian and Yin, Heng and Song, Le and Song, Dawn},
title = {Neural Network-Based Graph Embedding for Cross-Platform Binary Code Similarity Detection},
year = {2017},
isbn = {9781450349468},
publisher = {Association for Computing Machinery},
url = {https://doi.org/10.1145/3133956.3134018},
doi = {10.1145/3133956.3134018},
booktitle = {Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security},
pages = {363–376},
numpages = {14},
series = {CCS '17}
}

@ARTICLE{iotseeker21,
  author={Gao, Jian and Yang, Xin and Jiang, Yu and Song, Houbing and Choo, Kim-Kwang Raymond and Sun, Jiaguang},
  journal={IEEE Transactions on Industrial Informatics}, 
  title={Semantic Learning Based Cross-Platform Binary Vulnerability Search For IoT Devices}, 
  year={2021},
  volume={17},
  number={2},
  pages={971-979},
  doi={10.1109/TII.2019.2947432}}


@inproceedings{shi-etal-2021-cast,
    title = "{CAST}: Enhancing Code Summarization with Hierarchical Splitting and Reconstruction of Abstract Syntax Trees",
    author = "Shi, Ensheng  and
      Wang, Yanlin  and
      Du, Lun  and
      Zhang, Hongyu  and
      Han, Shi  and
      Zhang, Dongmei  and
      Sun, Hongbin",
    booktitle = "Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing",
    month = nov,
    year = "2021",
    address = "Online and Punta Cana, Dominican Republic",
    publisher = "Association for Computational Linguistics",
    url = "https://aclanthology.org/2021.emnlp-main.332",
    doi = "10.18653/v1/2021.emnlp-main.332",
    pages = "4053--4062",
    abstract = "Code summarization aims to generate concise natural language descriptions of source code, which can help improve program comprehension and maintenance. Recent studies show that syntactic and structural information extracted from abstract syntax trees (ASTs) is conducive to summary generation. However, existing approaches fail to fully capture the rich information in ASTs because of the large size/depth of ASTs. In this paper, we propose a novel model CAST that hierarchically splits and reconstructs ASTs. First, we hierarchically split a large AST into a set of subtrees and utilize a recursive neural network to encode the subtrees. Then, we aggregate the embeddings of subtrees by reconstructing the split ASTs to get the representation of the complete AST. Finally, AST representation, together with source code embedding obtained by a vanilla code token encoder, is used for code summarization. Extensive experiments, including the ablation study and the human evaluation, on benchmarks have demonstrated the power of CAST. To facilitate reproducibility, our code and data are available at https://github.com/DeepSoftwareAnalytics/CAST.",
}

@inproceedings{
chai2022pyramid,
title={Pyramid Attention For Source Code Summarization},
author={Lei Chai and Ming Li},
booktitle={Advances in Neural Information Processing Systems},
editor={Alice H. Oh and Alekh Agarwal and Danielle Belgrave and Kyunghyun Cho},
year={2022},
url={https://openreview.net/forum?id=iFJJevyrIEf}
}

@misc{blind-code,
title	= {{How Blind People Code?}},
year	= {2023},
URL	= {https://www.freecodecamp.org/news/how-blind-people-code-fdb64e3bf5c/},
}


@INPROCEEDINGS{mealin-vlhcc12,
  author={Mealin, Sean and Murphy-Hill, Emerson},
  booktitle={2012 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={An exploratory study of blind software developers}, 
  year={2012},
  volume={},
  number={},
  pages={71-74},
  doi={10.1109/VLHCC.2012.6344485}}


@inproceedings{khaled16,
author = {Albusays, Khaled and Ludi, Stephanie},
title = {Eliciting Programming Challenges Faced by Developers with Visual Impairments: Exploratory Study},
year = {2016},
isbn = {9781450341554},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2897586.2897616},
doi = {10.1145/2897586.2897616},
abstract = {Without understanding the programming difficulties faced by developers with visual impairments, the research community cannot begin to work on effective solutions to overcome these potential problems. This paper will describe our initial empirically based study to identify the problems blind software developers face. We analyzed 69 survey responses with blind developers in an effort to identify the aspects that are indeed a challenge to software development. The results indicate a number of difficulties, workarounds, and basis requirements that will serve as domain and stakeholder understand.},
booktitle = {Proceedings of the 9th International Workshop on Cooperative and Human Aspects of Software Engineering},
pages = {82–85},
numpages = {4},
keywords = {visual impairment, programming challenges, programmers, elicitation, blind programmers, accessibility},
location = {Austin, Texas},
series = {CHASE '16}
}


@article{stefik11,
author = {Stefik, Andreas and Hundhausen, Christopher and Patterson, Robert},
title = {An Empirical Investigation into the Design of Auditory Cues to Enhance Computer Program Comprehension},
year = {2011},
issue_date = {December, 2011},
publisher = {Academic Press, Inc.},
address = {USA},
volume = {69},
number = {12},
issn = {1071-5819},
url = {https://doi.org/10.1016/j.ijhcs.2011.07.002},
doi = {10.1016/j.ijhcs.2011.07.002},
abstract = {Decades of research have led to notable improvements in the representations used to aid human comprehension of computer programs. Much of this research has focused on visual representations, which leaves open the question of how best to design auditory representations of computer programs. While this question has particular relevance for visually impaired programmers, sighted programmers might also benefit from enhanced auditory representations of their programs. In order to investigate this question empirically, first, we introduce artifact encoding, a novel approach to rigorously measuring the comprehensibility of auditory representations of computer programs. Using this approach as a foundation, we present an experimental study that compared the comprehensibility of two alternative auditory program representations: one with lexical scoping cues that convey the nesting level of program statements, and another without such scoping cues. The results of our first experiment validate both artifact encoding and the scoping cues we used. To see whether auditory cues validated through our paradigm can aid program comprehension in a realistic task scenario, we experimentally compared programmers' ability to debug programs using three alternative environments: (1) an auditory execution environment with our empirically derived auditory cues; (2) an auditory execution environment with the current state-of-the-art auditory cues generated by a screen reader running on top of Microsoft Visual Studio; and (3) a visual version of the execution environment. The results of our second experiment showed that our comprehensible auditory cues are significantly better than the state-of-the-art, affording human performance approaching the effectiveness of visual representations within the statistical margin of error. This research contributes a novel methodology and foundational empirical data that can guide the design of effective auditory representations of computer programs.},
journal = {Int. J. Hum.-Comput. Stud.},
month = {dec},
pages = {820–838},
numpages = {19},
keywords = {Auditory programming, Program comprehension, Debugging, Programming}
}


@INPROCEEDINGS{wad07,
  author={Stefik, Andreas and Alexander, Roger and Patterson, Robert and Brown, Jonathan},
  booktitle={15th IEEE International Conference on Program Comprehension (ICPC '07)}, 
  title={WAD: A Feasibility study using the Wicked Audio Debugger}, 
  year={2007},
  volume={},
  number={},
  pages={69-80},
  doi={10.1109/ICPC.2007.42}}


@inproceedings{BakerML15,
  author       = {Catherine M. Baker and
                  Lauren R. Milne and
                  Richard E. Ladner},
  editor       = {Bo Begole and
                  Jinwoo Kim and
                  Kori Inkpen and
                  Woontack Woo},
  title        = {StructJumper: {A} Tool to Help Blind Programmers Navigate and Understand
                  the Structure of Code},
  booktitle    = {Proceedings of the 33rd Annual {ACM} Conference on Human Factors in
                  Computing Systems, {CHI} 2015, Seoul, Republic of Korea, April 18-23,
                  2015},
  pages        = {3043--3052},
  publisher    = {{ACM}},
  year         = {2015},
  url          = {https://doi.org/10.1145/2702123.2702589},
  doi          = {10.1145/2702123.2702589},
  timestamp    = {Sun, 02 Oct 2022 15:56:45 +0200},
  biburl       = {https://dblp.org/rec/conf/chi/BakerML15.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@ARTICLE{armaly-tse18,
  author={Armaly, Ameer and Rodeghero, Paige and McMillan, Collin},
  journal={IEEE Transactions on Software Engineering}, 
  title={A Comparison of Program Comprehension Strategies by Blind and Sighted Programmers}, 
  year={2018},
  volume={44},
  number={8},
  pages={712-724},
  doi={10.1109/TSE.2017.2729548}}

@INPROCEEDINGS{armaly-icsme18,
  author={Armaly, Ameer and Rodeghero, Paige and McMillan, Collin},
  booktitle={2018 IEEE International Conference on Software Maintenance and Evolution (ICSME)}, 
  title={AudioHighlight: Code Skimming for Blind Programmers}, 
  year={2018},
  volume={},
  number={},
  pages={206-216},
  doi={10.1109/ICSME.2018.00030}}

@inproceedings{10.1145/2897586.2897616,
author = {Albusays, Khaled and Ludi, Stephanie},
title = {Eliciting Programming Challenges Faced by Developers with Visual Impairments: Exploratory Study},
year = {2016},
isbn = {9781450341554},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2897586.2897616},
doi = {10.1145/2897586.2897616},
abstract = {Without understanding the programming difficulties faced by developers with visual impairments, the research community cannot begin to work on effective solutions to overcome these potential problems. This paper will describe our initial empirically based study to identify the problems blind software developers face. We analyzed 69 survey responses with blind developers in an effort to identify the aspects that are indeed a challenge to software development. The results indicate a number of difficulties, workarounds, and basis requirements that will serve as domain and stakeholder understand.},
booktitle = {Proceedings of the 9th International Workshop on Cooperative and Human Aspects of Software Engineering},
pages = {82–85},
numpages = {4},
keywords = {programmers, blind programmers, programming challenges, elicitation, visual impairment, accessibility},
location = {Austin, Texas},
series = {CHASE '16}
}

@inproceedings{10.1145/1056808.1057018,
author = {S\'{a}nchez, Jaime and Aguayo, Fernando},
title = {Blind Learners Programming through Audio},
year = {2005},
isbn = {1595930027},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1056808.1057018},
doi = {10.1145/1056808.1057018},
abstract = {The development of programming skills is a motivating issue in computer science. Most programming languages are focused on sighted users. This study introduces APL, Audio Programming Language for blind learners. APL is based on audio interfaces to assist novice blind learners to develop problem solving and algorithmic thinking skills. APL was designed by and for blind learners to construct meaning by making programs. We tested APL with novice blind programmers during and after development. They tried, analyzed, and make improvements to APL. Learners wrote programs to solve problems with increasingly complexity. Our preliminary results evidence that audio programming languages such as APL can be constructed to fit the needs and mental models of blind learners to motivate and help them to enter to the programming world.},
booktitle = {CHI '05 Extended Abstracts on Human Factors in Computing Systems},
pages = {1769–1772},
numpages = {4},
keywords = {audio-based navigation, virtual acoustic environments, spatialized sound, blind children, usability},
location = {Portland, OR, USA},
series = {CHI EA '05}
}




@inproceedings{10.1145/800071.802260,
author = {Schweikhardt, Waltraud},
title = {A Programming Environment for Blind APL-Programmers},
year = {1982},
isbn = {0897910788},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800071.802260},
doi = {10.1145/800071.802260},
abstract = {This paper reports on the programming environment we developed for blind APL-programmers. We defined a Braille-APL-Notation and developed an APL-editor, fitting the special needs of blind programmers. Since January, 1980 the Braille-APL-Notation has been successfully used by a blind programmer in our Institute. We discuss various problems blind programmers have in communicating with a computer, and present the hardware and software environment we provided and tested in Stuttgart. Finally, we report on our experience and results.},
booktitle = {Proceedings of the International Conference on APL},
pages = {325–331},
numpages = {7},
location = {Heidelberg, Germany},
series = {APL '82}
}

@article{10.1006/jnca.1998.0060,
author = {Blenkhorn, P. and Evans, D.G.},
title = {Using Speech and Touch to Enable Blind People to Access Schematic Diagrams},
year = {1998},
issue_date = {Jan. 1998},
publisher = {Academic Press Ltd.},
address = {GBR},
volume = {21},
number = {1},
issn = {1084-8045},
url = {https://doi.org/10.1006/jnca.1998.0060},
doi = {10.1006/jnca.1998.0060},
abstract = {A novel approach for enabling blind people to interact with computer-generated graphical information is presented. The paper discusses how computer-generated, text-based information is presented to blind people and then identifies the difficulties in providing similar access to the range of graphical information presented by computer systems. A computer-based system that allows blind users to read, create and edit one type of schematic diagram, namely data flow diagrams used in software engineering, is presented, together with the mapping from the original diagram to a suitable generic, tactile diagram. Results of the evaluation of the approach are given, as are suggested adaptations of the approach that can present tabular information and time-ordered schematic diagrams to a user.},
journal = {J. Netw. Comput. Appl.},
month = {jan},
pages = {17–29},
numpages = {13}
}

@inproceedings{10.1145/2501988.2502047,
author = {Khambadkar, Vinitha and Folmer, Eelke},
title = {GIST: A Gestural Interface for Remote Nonvisual Spatial Perception},
year = {2013},
isbn = {9781450322683},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2501988.2502047},
doi = {10.1145/2501988.2502047},
abstract = {Spatial perception is a challenging task for people who are blind due to the limited functionality and sensing range of hands. We present GIST, a wearable gestural interface that offers spatial perception functionality through the novel appropriation of the user's hands into versatile sensing rods. Using a wearable depth-sensing camera, GIST analyzes the visible physical space and allows blind users to access spatial information about this space using different hand gestures. By allowing blind users to directly explore the physical space using gestures, GIST allows for the closest mapping between augmented and physical reality, which facilitates spatial interaction. A user study with eight blind users evaluates GIST in its ability to help perform everyday tasks that rely on spatial perception, such as grabbing an object or interacting with a person. Results of our study may help develop new gesture based assistive applications.},
booktitle = {Proceedings of the 26th Annual ACM Symposium on User Interface Software and Technology},
pages = {301–310},
numpages = {10},
keywords = {visual impairment, gestures, spatial perception},
location = {St. Andrews, Scotland, United Kingdom},
series = {UIST '13}
}

@article{10.1145/568600.568611,
author = {Siegfried, Robert M.},
title = {A Scripting Language to Help the Blind to Program Visually},
year = {2002},
issue_date = {February 2002},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {37},
number = {2},
issn = {0362-1340},
url = {https://doi.org/10.1145/568600.568611},
doi = {10.1145/568600.568611},
abstract = {Computer programming, a career path that has been accessible to the blind, has changed in recent years as more systems use graphical user interfaces. These changes make it more difficult for the blind to work productively as programmers. Visual Basic, a RAD programming language that stores forms in text format, requires a great deal of information to be specified. A scripting language is introduced which simplifies the task and allows blind programmers to specify forms in a much simpler fashion. An example and a formal grammar are included.},
journal = {SIGPLAN Not.},
month = {feb},
pages = {53–56},
numpages = {4},
keywords = {visual programming, visual basic, blind programmers, graphical user interfaces}
}

@inproceedings{10.1145/3308561.3354616,
author = {Falase, Olutayo and Siu, Alexa F. and Follmer, Sean},
title = {Tactile Code Skimmer: A Tool to Help Blind Programmers Feel the Structure of Code},
year = {2019},
isbn = {9781450366762},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3308561.3354616},
doi = {10.1145/3308561.3354616},
abstract = {Skimming new code with a screen reader can be a time-consuming task for blind and visually impaired programmers. Screen readers aid with code navigation, but dictate code line-by-line and read spaces and tabs individually. This often provides more information than is needed. In this work, we present the Tactile Code Skimmer (TCS), a tool to aid blind and visually impaired programmers with skimming code. The device physically reflects the indentation levels of code with actuated slide potentiometers, thus helping reduce the "hearing load" that often accompanies screen readers. We describe the TCS design and implementation. Based on feedback from participants obtained through demos and an in-depth session, we discuss some considerations for tactile tools that aid with code skimming.},
booktitle = {Proceedings of the 21st International ACM SIGACCESS Conference on Computers and Accessibility},
pages = {536–538},
numpages = {3},
keywords = {accessibility, code structure, blind programmers, visually impaired, tactile aids},
location = {Pittsburgh, PA, USA},
series = {ASSETS '19}
}

@inproceedings{10.1145/1168987.1169035,
author = {Franqueiro, Kenneth G. and Siegfried, Robert M.},
title = {Designing a Scripting Language to Help the Blind Program Visually},
year = {2006},
isbn = {1595932909},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1168987.1169035},
doi = {10.1145/1168987.1169035},
abstract = {The vast proliferation of GUI-based applications, including graphical interactive development environments (IDEs), has placed blind programmers at a severe disadvantage in a profession that had previously been relatively accessible. Visual Basic is one such programming language and IDE, in which most programmers "point and click" to design the forms on which their applications rely. It is the goal of this project to introduce a scripting language that eliminates this barrier by providing a scripting language that makes it possible to define Visual Basic GUI forms and their components verbally, while remaining easy to write.},
booktitle = {Proceedings of the 8th International ACM SIGACCESS Conference on Computers and Accessibility},
pages = {241–242},
numpages = {2},
keywords = {blind programmers, visual programming, graphical user interfaces, visual basic},
location = {Portland, Oregon, USA},
series = {Assets '06}
}

@article{10.1145/1408760.1408761,
author = {Glinert, Ephraim P. and York, Bryant W.},
title = {Computers and People with Disabilities},
year = {2008},
issue_date = {October 2008},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {1},
number = {2},
issn = {1936-7228},
url = {https://doi.org/10.1145/1408760.1408761},
doi = {10.1145/1408760.1408761},
abstract = {Editors' comments: “Computers and People with Disabilities” is a reprint of an article originally published in Communications of the ACM in 1992. In this article, Glinert and York issued a “call-to-arms” for research and development on technologies for people with disabilities. Specifically, they highlighted that human-computer interfaces at the time generally failed to take into account the needs of disabled users. Their challenge was to change computing culture to address this need. Their article remains timely today in its consideration of government, industry, and private foundations working with researchers to achieve accessible technology. With the recent launch of Transactions on Accessible Computing, this seems an appropriate time to consider progress in the field since, as well as current research trends.The reprinting of this article is followed by four commentaries by leaders in accessibility research. Each was cited in the 1992 article and each now gives their view on how the field has progressed since that time. In their commentaries, some themes emerge and new technologies are discussed. In short, their commentaries point to both a great deal of progress and a lack of progress. All four of the commentators note areas where computing continues to present barriers rather than assist users with disabilities.Alistair Edwards sets the stage with a look back at interfaces and input technologies popular in 1992, with attention paid to access problems related to graphical user interfaces (GUIs) that have consumed much research energy since 1992. Alan Newell highlights disability concerns that were not given large research consideration in 1992, but which have now become significant due, in large part, to changes in global demographics. Specifically, he brings visibility to research on older adults and cognitively disabled users.A number of advances in technology and methodology since 1992 are discussed by the commentators. The ubiquity of computing and its critical adoption in the world today are highlighted. The commentators reflect, for example, on technologies produced by research for disabled users that have now impacted mainstream offerings on standards for accessibility that have emerged worldwide and their impact and on assistive technologies that have been developed. Critically, the proliferation of the World Wide Web was not foreseen in 1992 and its use by people with disabilities is discussed. Gregg Vanderheiden considers the opportunity afforded by the Web to provide widespread availability of accessible software.Glinert and York discussed the need for design for disability. While research relevant to users with disabilities is gaining momentum, the commentators indicate that users with disabilities still struggle with much of today's IT. The commentators note current trends toward designs that take into account disabled users. Notably, Richard Ladner ends his commentary by mentioning the issue of empowerment. Users with disabilities have moved beyond simply needing the protections of regulation that were emerging in 1992, to being active participants in designing solutions to allow full participation in the current social, political, and economic environments.Together, these articles provide a great deal of food for thought on technology advances and new considerations of accessible technology. Has the change in computing culture envisioned by Glinert and York taken hold?Vicki L. Hanson and Andrew SearsCo-Editors in Chief},
journal = {ACM Trans. Access. Comput.},
month = {oct},
articleno = {7},
numpages = {7},
keywords = {ubiquitous computing, Web, HCI, interfaces, universal access, Accessibility, inclusive design}
}

@inproceedings{10.1145/238386.238405,
author = {Raman, T. V.},
title = {Emacspeak—a Speech Interface},
year = {1996},
isbn = {0897917774},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/238386.238405},
doi = {10.1145/238386.238405},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {66–71},
numpages = {6},
keywords = {audio formatting, speech as a first-class I/O medium, direct access, speech interface, spoken feedback},
location = {Vancouver, British Columbia, Canada},
series = {CHI '96}
}


@article{10.5555/1103141.1103147,
author = {Armaly, Ameer},
title = {Making Linux Accessible for the Visually Impaired with Speakup},
year = {2005},
issue_date = {December 2005},
publisher = {Belltown Media},
address = {Houston, TX},
volume = {2005},
number = {140},
issn = {1075-3583},
abstract = {A great article from an amazing 16-year-old kid on a project that's changing his life.},
journal = {Linux J.},
month = {dec},
pages = {6}
}

@inproceedings{10.1145/1953163.1953323,
author = {Stefik, Andreas M. and Hundhausen, Christopher and Smith, Derrick},
title = {On the Design of an Educational Infrastructure for the Blind and Visually Impaired in Computer Science},
year = {2011},
isbn = {9781450305006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1953163.1953323},
doi = {10.1145/1953163.1953323},
abstract = {The blind and visually impaired community is significantly underrepresented in computer science. Students who wish to enter the discipline must overcome significant technological and educational barriers to succeed. In an attempt to help this population, we are engaged in a three-year research project to build an educational infrastructure for blind and visually impaired middle and high school students. Our primary research goal is to begin forging a multi-sensory educational infrastructure for the blind across the United States. We present here two preliminary results from this research: 1) a new auditory programming environment called Sodbeans, a programming language called Hop, and a multi-sensory (sound and touch) curriculum, and 2) an empirical study of our first summer workshop with the blind students. Results show that students reported a significant increase in programming self-efficacy after participating in our camp.},
booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
pages = {571–576},
numpages = {6},
keywords = {visual impairments, accessibility, assistive technology, auditory debugging},
location = {Dallas, TX, USA},
series = {SIGCSE '11}
}


@INPROCEEDINGS{5306335,
  author={Starke, Jamie and Luce, Chris and Sillito, Jonathan},
  booktitle={2009 IEEE International Conference on Software Maintenance}, 
  title={Searching and skimming: An exploratory study}, 
  year={2009},
  volume={},
  number={},
  pages={157-166},
  doi={10.1109/ICSM.2009.5306335}}

@article{10.1145/1124706.1121427,
author = {Siegfried, Robert M.},
title = {Visual Programming and the Blind: The Challenge and the Opportunity},
year = {2006},
issue_date = {March 2006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {38},
number = {1},
issn = {0097-8418},
url = {https://doi.org/10.1145/1124706.1121427},
doi = {10.1145/1124706.1121427},
abstract = {The proliferation of graphical user interfaces has had a dramatic impact on the ability to work as a programmer. It is particularly difficult for the blind to create forms for visual programming applications, such as Visual Basic. A scripting language is introduced that enables the blind to create Visual Basic forms without needing to specify a great deal of detail and without needing the "point and click" approach that they cannot use. Related issues of accommodating the blind in a computer science course are also discussed.},
journal = {SIGCSE Bull.},
month = {mar},
pages = {275–278},
numpages = {4},
keywords = {graphical user interfaces, visual basic, visual programming, blind programmers}
}


@inproceedings{10.1145/1121341.1121427,
author = {Siegfried, Robert M.},
title = {Visual Programming and the Blind: The Challenge and the Opportunity},
year = {2006},
isbn = {1595932593},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1121341.1121427},
doi = {10.1145/1121341.1121427},
abstract = {The proliferation of graphical user interfaces has had a dramatic impact on the ability to work as a programmer. It is particularly difficult for the blind to create forms for visual programming applications, such as Visual Basic. A scripting language is introduced that enables the blind to create Visual Basic forms without needing to specify a great deal of detail and without needing the "point and click" approach that they cannot use. Related issues of accommodating the blind in a computer science course are also discussed.},
booktitle = {Proceedings of the 37th SIGCSE Technical Symposium on Computer Science Education},
pages = {275–278},
numpages = {4},
keywords = {visual programming, visual basic, blind programmers, graphical user interfaces},
location = {Houston, Texas, USA},
series = {SIGCSE '06}
}

@inproceedings{10.1145/2889160.2889188,
author = {McMillan, Collin and Rodda-Tyler, Amanda},
title = {Collaborative Software Engineering Education between College Seniors and Blind High School Students},
year = {2016},
isbn = {9781450342056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2889160.2889188},
doi = {10.1145/2889160.2889188},
abstract = {We describe a collaborative software engineering course between sighted college students and high school students with visual impairments. We designed the course as a mentorship experience, in which one college student mentor is connected to one high school student mentee. Each pair of students is responsible for a programming project. The students must learn to communicate programming concepts and software designs, to work with colleagues with very different levels of software engineering knowledge, and to overcome problems related to visual accessibility. We have implemented our course in a pilot program with five mentors and five mentees. This paper covers our course design, initial experiences, and recommendations for future implementations.},
booktitle = {Proceedings of the 38th International Conference on Software Engineering Companion},
pages = {360–363},
numpages = {4},
keywords = {software engineering education, visual disabilities},
location = {Austin, Texas},
series = {ICSE '16}
}

@inproceedings{10.1145/2889160.2891041,
author = {Armaly, Ameer and McMillan, Collin},
title = {An Empirical Study of Blindness and Program Comprehension},
year = {2016},
isbn = {9781450342056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2889160.2891041},
doi = {10.1145/2889160.2891041},
abstract = {Blind programmers typically use a screen reader when reading code whereas sighted programmers are able to skim the code with their eyes. This difference has the potential to impact the generalizability of software engineering studies and approaches. We present a summary of a paper which will soon be under review at TSE that investigates how code comprehension of blind programmers differs from that of sighted programmers. Put briefly, we found no statistically-significant differences between the areas of code that the blind programmers found to be important and the areas of code that the sighted programmers found to be important.},
booktitle = {Proceedings of the 38th International Conference on Software Engineering Companion},
pages = {683–685},
numpages = {3},
location = {Austin, Texas},
series = {ICSE '16}
}

@inproceedings{10.1145/3132525.3132550,
author = {Albusays, Khaled and Ludi, Stephanie and Huenerfauth, Matt},
title = {Interviews and Observation of Blind Software Developers at Work to Understand Code Navigation Challenges},
year = {2017},
isbn = {9781450349260},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3132525.3132550},
doi = {10.1145/3132525.3132550},
abstract = {Integrated Development Environments (IDEs) play an important role in the workflow of many software developers, e.g. providing syntactic highlighting or other navigation aids to support the creation of lengthy codebases. Unfortunately, such complex visual information is difficult to convey with current screen-reader technologies, thereby creating barriers for programmers who are blind, who are nevertheless using IDEs. To better understand their usage strategies and challenges, we conducted an exploratory study to investigate the issue of code navigation by developers who are blind. We observed 28 blind programmers using their preferred coding tool while they performed various programming activities, in particular while they navigated through complex codebases. Participants encountered many navigation difficulties when using their preferred coding software with assistive technologies (e.g., screen readers). During interviews, participants reported dissatisfaction with the accessibility of most IDEs due to the heavy use of visual abstractions. To compensate, participants used multiple input methods and workarounds to navigate through code comfortably and reduce complexity, but these approaches often reduced their speed and introduced mistakes, thereby reducing their efficiency as programmers. Our findings suggest an opportunity for researchers and the software industry to improve the accessibility and usability of code navigation for blind developers in IDEs.},
booktitle = {Proceedings of the 19th International ACM SIGACCESS Conference on Computers and Accessibility},
pages = {91–100},
numpages = {10},
keywords = {code navigation difficulties, blind programmers, user studies, programming challenges, accessibility},
location = {Baltimore, Maryland, USA},
series = {ASSETS '17}
}

@inproceedings{10.1145/3170427.3188696,
author = {Hutchinson, Joe and Metatla, Oussama},
title = {An Initial Investigation into Non-Visual Code Structure Overview Through Speech, Non-Speech and Spearcons},
year = {2018},
isbn = {9781450356213},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3170427.3188696},
doi = {10.1145/3170427.3188696},
abstract = {We investigate a novel, non-visual approach to overviewing object-oriented source code and evaluate the efficiency of different categories of sounds for the purpose of getting an overview of source code structure for a visually-impaired computer programmer. A user-study with ten sighted and three non-sighted participants compared the effectiveness of speech, non-speech and spearcons on measures of accuracy and enjoyment for the task of quickly overviewing a class file. Results showed positive implications for the use of non-speech sounds in identifying programming constructs and for aesthetic value, although the effectiveness of the other sound categories in these measurements are not ruled out. Additionally, various design choices of the application impacted results, which should be of interest to designers of auditory display, accessibility and education.},
booktitle = {Extended Abstracts of the 2018 CHI Conference on Human Factors in Computing Systems},
pages = {1–6},
numpages = {6},
keywords = {programming, visualisation, accessibility, overview, sonification},
location = {Montreal QC, Canada},
series = {CHI EA '18}
}

@inproceedings{10.1145/2661334.2661385,
author = {Ludi, Stephanie and Ellis, Lindsey and Jordan, Scott},
title = {An Accessible Robotics Programming Environment for Visually Impaired Users},
year = {2014},
isbn = {9781450327206},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2661334.2661385},
doi = {10.1145/2661334.2661385},
abstract = {Despite advances in assistive technology, challenges remain in pre-college computer science outreach and university programs for visually impaired students. The use of robotics has been popular in pre-college classrooms and outreach programs, including those that serve underrepresented groups. This paper describes the specific accessibility features implemented in software that provides an accessible Lego Mindstorms NXT programming environment for teenage students who are visually impaired. JBrick is designed to support students with diverse visual acuity and who use needed assistive technology. Field tests over several days showed that JBrick has the potential to accommodate students who are visually impaired as they work together to program Lego Mindstorms NXT robots.},
booktitle = {Proceedings of the 16th International ACM SIGACCESS Conference on Computers \& Accessibility},
pages = {237–238},
numpages = {2},
keywords = {accessibility, visual impairment},
location = {Rochester, New York, USA},
series = {ASSETS '14}
}

@INPROCEEDINGS{6344485,
  author={Mealin, Sean and Murphy-Hill, Emerson},
  booktitle={2012 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={An exploratory study of blind software developers}, 
  year={2012},
  volume={},
  number={},
  pages={71-74},
  doi={10.1109/VLHCC.2012.6344485}}

@article{10.1145/292834.292839,
author = {Brewster, Stephen A.},
title = {Using Nonspeech Sounds to Provide Navigation Cues},
year = {1998},
issue_date = {Sept. 1998},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {5},
number = {3},
issn = {1073-0516},
url = {https://doi.org/10.1145/292834.292839},
doi = {10.1145/292834.292839},
abstract = {This article describes 3 experiments that investigate the possibiity of using structured nonspeech audio messages called earcons to provide navigational cues in a menu hierarchy. A hierarchy of 27 nodes and 4 levels was created with an earcon for each node. Rules were defined for the creation of hierarchical earcons at each node. Participants had to identify their location in the hierarchy by listening to an earcon. Results of the first experiment showed that participants could identify their location with 81.5\% accuracy, indicating that earcons were a powerful method of communicating hierarchy information. One proposed use for such navigation cues is in telephone-based interfaces (TBIs) where navigation is a problem. The first experiment did not address the particular problems of earcons in TBIs such as “does the lower quality of sound over the telephone lower recall rates,” “can users remember earcons over a period of time.” and “what effect does training type have on recall?” An experiment was conducted and results showed that sound quality did lower the recall of earcons. However; redesign of the earcons overcame this problem with 73\% recalled correctly. Participants could still recall earcons at this level after a week had passed. Training type also affected recall. With personal training participants recalled 73\% of the earcons, but with purely textual training results were significantly lower. These results show that earcons can provide good navigation cues for TBIs. The final experiment used compound, rather than hierarchical earcons to represent the hierarchy from the first experiment. Results showed that with sounds constructed in this way participants could recall 97\% of the earcons. These experiments have developed our general understanding of earcons. A hierarchy three times larger than any previously created was tested, and this was also the first test of the recall of earcons over time.},
journal = {ACM Trans. Comput.-Hum. Interact.},
month = {sep},
pages = {224–259},
numpages = {36},
keywords = {navigation, earcons, auditory interfaces, telephone-based interfaces, nonspeech audio}
}

@article{10.1145/563517.563372,
author = {Francioni, Joan M. and Smith, Ann C.},
title = {Computer Science Accessibility for Students with Visual Disabilities},
year = {2002},
issue_date = {March 2002},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {34},
number = {1},
issn = {0097-8418},
url = {https://doi.org/10.1145/563517.563372},
doi = {10.1145/563517.563372},
abstract = {Students with visual disabilities face unique challenges in learning to be computer scientists. These challenges can be overcome, however, with the use of specialized software tools and hardware equipment, collectively called assistive technology. In this paper, we discuss the environment we are using for three students with visual disabilities who are starting in our programs this year. This environment includes a collection of commercial assistive technology and a programming tool that we have developed in-house.},
journal = {SIGCSE Bull.},
month = {feb},
pages = {91–95},
numpages = {5}
}

@inproceedings{10.1145/2556288.2557073,
author = {Henley, Austin Z. and Fleming, Scott D.},
title = {The Patchworks Code Editor: Toward Faster Navigation with Less Code Arranging and Fewer Navigation Mistakes},
year = {2014},
isbn = {9781450324731},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2556288.2557073},
doi = {10.1145/2556288.2557073},
abstract = {Increasingly, people are faced with navigating large information spaces, and making such navigation efficient is of paramount concern. In this paper, we focus on the problems programmers face in navigating large code bases, and propose a novel code editor, Patchworks, that addresses the problems. In particular, Patchworks leverages two new interface idioms - the patch grid and the ribbon - to help programmers navigate more quickly, make fewer navigation errors, and spend less time arranging their code. To validate Patchworks, we conducted a user study that compared Patchworks to two existing code editors: the traditional file-based editor, Eclipse, and the newer canvas-based editor, Code Bubbles. Our results showed (1) that programmers using Patchworks were able to navigate significantly faster than with Eclipse (and comparably with Code Bubbles), (2) that programmers using Patchworks made significantly fewer navigation errors than with Code Bubbles or Eclipse, and (3) that programmers using Patchworks spent significantly less time arranging their code than with Code Bubbles (and comparably with Eclipse).},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {2511–2520},
numpages = {10},
keywords = {code editor, integrated development environment (ide), navigation, user study},
location = {Toronto, Ontario, Canada},
series = {CHI '14}
}

@INPROCEEDINGS{5967168,
  author={Konecki, Mario and Lovrenčić, Alen and Kudelić, Robert},
  booktitle={2011 Proceedings of the 34th International Convention MIPRO}, 
  title={Making programming accessible to the blinds}, 
  year={2011},
  volume={},
  number={},
  pages={820-824},
  doi={}}

@article{10.1145/1029014.1028654,
author = {Smith, Ann C. and Cook, Justin S. and Francioni, Joan M. and Hossain, Asif and Anwar, Mohd and Rahman, M. Fayezur},
title = {Nonvisual Tool for Navigating Hierarchical Structures},
year = {2003},
issue_date = {Sept. 2003 - Jan. 2004},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
number = {77–78},
issn = {1558-2337},
url = {https://doi.org/10.1145/1029014.1028654},
doi = {10.1145/1029014.1028654},
abstract = {The hierarchical structure of a program can be quite complex. As such, many Integrated Development Environments (IDEs) provide graphical representations of program structure at different levels of abstraction. Such representations are not very accessible to non-sighted programmers, as screen readers are not able to portray the underlying hierarchical structure of the information. In this paper, we define a set of requirements for an accessible tree navigation strategy. An implementation of this strategy was developed as a plug-in to the Eclipse IDE and was tested by twelve student programmers. The evaluation of the tool shows the strategy to be an efficient and effective way for a non-sighted programmer to navigate hierarchical structures.},
journal = {SIGACCESS Access. Comput.},
month = {sep},
pages = {133–139},
numpages = {7},
keywords = {hierarchical structures, java programmers, navigation}
}

@inproceedings{10.1145/354324.354356,
author = {Smith, Ann C. and Francioni, Joan M. and Matzek, Sam D.},
title = {A Java Programming Tool for Students with Visual Disabilities},
year = {2000},
isbn = {1581133138},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/354324.354356},
doi = {10.1145/354324.354356},
abstract = {This paper reports on a tool for assisting students with visual disabilities in learning how to program. The tool is meant to be used by computer science majors learning the programming language Java. As part of the developmental process of building this tool, we have implemented a rapid prototype to be used by people with disabilities in order to define appropriate requirements for the full version of the tool. This requires that the prototype is completely usable via a keyboard and speech interface, and it is easily adaptable for trying out different strategies. In this paper, we present the motivation and philosophy of the full tool, called JavaSpeak. We also present the details of a prototype implementation of JavaSpeak.},
booktitle = {Proceedings of the Fourth International ACM Conference on Assistive Technologies},
pages = {142–148},
numpages = {7},
keywords = {programming tool, learning to program, students with visual disabilities, Java},
location = {Arlington, Virginia, USA},
series = {Assets '00}
}

@INPROCEEDINGS{4268242,
  author={Stefik, Andreas and Alexander, Roger and Patterson, Robert and Brown, Jonathan},
  booktitle={15th IEEE International Conference on Program Comprehension (ICPC '07)}, 
  title={WAD: A Feasibility study using the Wicked Audio Debugger}, 
  year={2007},
  volume={},
  number={},
  pages={69-80},
  doi={10.1109/ICPC.2007.42}}

@article{10.1016/j.ijhcs.2011.07.002,
author = {Stefik, Andreas and Hundhausen, Christopher and Patterson, Robert},
title = {An Empirical Investigation into the Design of Auditory Cues to Enhance Computer Program Comprehension},
year = {2011},
issue_date = {December, 2011},
publisher = {Academic Press, Inc.},
address = {USA},
volume = {69},
number = {12},
issn = {1071-5819},
url = {https://doi.org/10.1016/j.ijhcs.2011.07.002},
doi = {10.1016/j.ijhcs.2011.07.002},
abstract = {Decades of research have led to notable improvements in the representations used to aid human comprehension of computer programs. Much of this research has focused on visual representations, which leaves open the question of how best to design auditory representations of computer programs. While this question has particular relevance for visually impaired programmers, sighted programmers might also benefit from enhanced auditory representations of their programs. In order to investigate this question empirically, first, we introduce artifact encoding, a novel approach to rigorously measuring the comprehensibility of auditory representations of computer programs. Using this approach as a foundation, we present an experimental study that compared the comprehensibility of two alternative auditory program representations: one with lexical scoping cues that convey the nesting level of program statements, and another without such scoping cues. The results of our first experiment validate both artifact encoding and the scoping cues we used. To see whether auditory cues validated through our paradigm can aid program comprehension in a realistic task scenario, we experimentally compared programmers' ability to debug programs using three alternative environments: (1) an auditory execution environment with our empirically derived auditory cues; (2) an auditory execution environment with the current state-of-the-art auditory cues generated by a screen reader running on top of Microsoft Visual Studio; and (3) a visual version of the execution environment. The results of our second experiment showed that our comprehensible auditory cues are significantly better than the state-of-the-art, affording human performance approaching the effectiveness of visual representations within the statistical margin of error. This research contributes a novel methodology and foundational empirical data that can guide the design of effective auditory representations of computer programs.},
journal = {Int. J. Hum.-Comput. Stud.},
month = {dec},
pages = {820–838},
numpages = {19},
keywords = {Auditory programming, Program comprehension, Debugging, Programming}
}

@inproceedings{10.1145/1953163.1953323,
author = {Stefik, Andreas M. and Hundhausen, Christopher and Smith, Derrick},
title = {On the Design of an Educational Infrastructure for the Blind and Visually Impaired in Computer Science},
year = {2011},
isbn = {9781450305006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1953163.1953323},
doi = {10.1145/1953163.1953323},
abstract = {The blind and visually impaired community is significantly underrepresented in computer science. Students who wish to enter the discipline must overcome significant technological and educational barriers to succeed. In an attempt to help this population, we are engaged in a three-year research project to build an educational infrastructure for blind and visually impaired middle and high school students. Our primary research goal is to begin forging a multi-sensory educational infrastructure for the blind across the United States. We present here two preliminary results from this research: 1) a new auditory programming environment called Sodbeans, a programming language called Hop, and a multi-sensory (sound and touch) curriculum, and 2) an empirical study of our first summer workshop with the blind students. Results show that students reported a significant increase in programming self-efficacy after participating in our camp.},
booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
pages = {571–576},
numpages = {6},
keywords = {accessibility, assistive technology, auditory debugging, visual impairments},
location = {Dallas, TX, USA},
series = {SIGCSE '11}
}

@inproceedings{10.1145/2982142.2982168,
author = {Szpiro, Sarit Felicia Anais and Hashash, Shafeka and Zhao, Yuhang and Azenkot, Shiri},
title = {How People with Low Vision Access Computing Devices: Understanding Challenges and Opportunities},
year = {2016},
isbn = {9781450341240},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2982142.2982168},
doi = {10.1145/2982142.2982168},
abstract = {Low vision is a pervasive condition in which people have difficulty seeing even with corrective lenses. People with low vision frequently use mainstream computing devices, however how they use their devices to access information and whether digital low vision accessibility tools provide adequate support remains understudied. We addressed these questions with a contextual inquiry study. We observed 11 low vision participants using their smartphones, tablets, and computers when performing simple tasks such as reading email. We found that participants preferred accessing information visually than aurally (e.g., screen readers), and juggled a variety of accessibility tools. However, accessibility tools did not provide them with appropriate support. Moreover, participants had to constantly perform multiple gestures in order to see content comfortably. These challenges made participants inefficient-they were slow and often made mistakes; even tech savvy participants felt frustrated and not in control. Our findings reveal the unique needs of low vision people, which differ from those of people with no vision and design opportunities for improving low vision accessibility tools.},
booktitle = {Proceedings of the 18th International ACM SIGACCESS Conference on Computers and Accessibility},
pages = {171–180},
numpages = {10},
keywords = {accessibility, low vision, contextual inquiry, computing devices},
location = {Reno, Nevada, USA},
series = {ASSETS '16}
}

@article{casten2005knowledge,
  title={Knowledge and Use of Low Vision Services Among Persons with Age-related Macular Degeneration},
  author={Casten, Robin J and Maloney, Erin K and Rovner, Barry W},
  journal={Journal of Visual Impairment \& Blindness},
  volume={99},
  number={11},
  pages={720--724},
  year={2005},
  pmid={20041039},
  pmcid={PMC2798738}
}

@article{CHIANG2005394,
title = {Computer and World Wide Web Accessibility by Visually Disabled Patients: Problems and Solutions},
journal = {Survey of Ophthalmology},
volume = {50},
number = {4},
pages = {394-405},
year = {2005},
issn = {0039-6257},
doi = {https://doi.org/10.1016/j.survophthal.2005.04.004},
url = {https://www.sciencedirect.com/science/article/pii/S0039625705000421},
author = {Michael F. Chiang and Roy G. Cole and Suhit Gupta and Gail E. Kaiser and Justin B. Starren},
keywords = {access to information, biomedical technology, blindness, Internet, low vision, medical informatics, user-computer interface, vision disorders, visual acuity},
abstract = {Rapid advances in information technology have dramatically transformed the world during the past several decades. Access to computers and the World Wide Web is increasingly required for education and employment, as well as for many activities of daily living. Although these changes have improved society in many respects, they present an obstacle for visually disabled patients who may have significant difficulty processing the visual cues presented by modern graphical user interfaces. This article reviews the specific barriers to computer and Web access faced by visually disabled patients, describes clinical evaluation methods, summarizes traditional low vision methods as well as newer assistive computer technologies for universal accessibility, and discusses emerging technologies and future directions in this area.}
}

@article{crossland2014smartphone,
  title={Smartphone, tablet computer and e-reader use by people with vision impairment},
  author={Crossland, Michael D and Silva, Rufino S and Macedo, Ant{\'o}nio F},
  journal={Ophthalmic Physiol Opt},
  volume={34},
  number={5},
  pages={552--557},
  year={2014},
  month={Sep},
  doi={10.1111/opo.12136},
  PMID={25070703},
  eprint={2014/07/30},
  pubmed-central={PMC4144906},
  pubmed={25070703},
  published-online={2014/07/28},
  url={https://onlinelibrary.wiley.com/doi/full/10.1111/opo.12136},
}

@inproceedings{10.1145/1357054.1357250,
author = {Gajos, Krzysztof Z. and Wobbrock, Jacob O. and Weld, Daniel S.},
title = {Improving the Performance of Motor-Impaired Users with Automatically-Generated, Ability-Based Interfaces},
year = {2008},
isbn = {9781605580111},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1357054.1357250},
doi = {10.1145/1357054.1357250},
abstract = {We evaluate two systems for automatically generating personalized interfaces adapted to the individual motor capabilities of users with motor impairments. The first system, SUPPLE, adapts to users' capabilities indirectly by first using the ARNAULD preference elicitation engine to model a user's preferences regarding how he or she likes the interfaces to be created. The second system, SUPPLE++, models a user's motor abilities directly from a set of one-time motor performance tests. In a study comparing these approaches to baseline interfaces, participants with motor impairments were 26.4\% faster using ability-based user interfaces generated by SUPPLE++. They also made 73\% fewer errors, strongly preferred those interfaces to the manufacturers' defaults, and found them more efficient, easier to use, and much less physically tiring. These findings indicate that rather than requiring some users with motor impairments to adapt themselves to software using separate assistive technologies, software can now adapt itself to the capabilities of its users.},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {1257–1266},
numpages = {10},
keywords = {supple, arnauld, supple++, motor impairments, ability-based user interfaces},
location = {Florence, Italy},
series = {CHI '08}
}

@article{gill2013digital,
  title={Digital reader vs print media: the role of digital technology in reading accuracy in age-related macular degeneration},
  author={Gill, Kevin and Mao, Amy and Powell, Alex M and Sheidow, Tom},
  journal={Eye (Lond)},
  volume={27},
  number={5},
  pages={639--643},
  year={2013},
  month={May},
  doi={10.1038/eye.2013.14},
  PMID={23492860},
  PMCID={PMC3650266},
  published-online={2013/03/16},
  url={https://www.nature.com/articles/eye201314},
}

@article{horowitz2003influence,
  title={The influence of health, social support quality and rehabilitation on depression among disabled elders},
  author={Horowitz, Amy and Reinhardt, Joann P and Boerner, Kathrin and Travis, Laura A},
  journal={Aging Ment Health},
  volume={7},
  number={5},
  pages={342--350},
  year={2003},
  month={Sep},
  doi={10.1080/1360786031000150739},
  PMID={12959803},
  url={https://www.tandfonline.com/doi/abs/10.1080/1360786031000150739},
}

@inproceedings{10.1145/274497.274512,
author = {Jacko, Julie A. and Sears, Andrew},
title = {Designing Interfaces for an Overlooked User Group: Considering the Visual Profiles of Partially Sighted Users},
year = {1998},
isbn = {1581130201},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/274497.274512},
doi = {10.1145/274497.274512},
abstract = {In this position paper we argue the importance of research focusing on the issues involved in designing computer systems for partially sighted computer users. Currently, there is a lack of data that explores how combinations of impaired visual processes affect preferences for, and performance with, graphical user interfaces. This lack of fundamental information about how an individual's visual profile determines the strategies and behaviors exhibited while using computers limits our ability to design effective user interfaces for partially sighted computer users. The objective of this position paper is to motivate research that addresses this deficiency in our knowledge base so that researchers can design enabling technologies in a systematic fashion for this unique user group as has been done for fully sighted users and blind users.},
booktitle = {Proceedings of the Third International ACM Conference on Assistive Technologies},
pages = {75–77},
numpages = {3},
keywords = {human-computer interaction, partial vision, enabling technologies, visually impaired},
location = {Marina del Rey, California, USA},
series = {Assets '98}
}

@inproceedings{10.1145/354324.354327,
author = {Jacko, Julie A. and Barreto, Armando B. and Marmet, Gottlieb J. and Chu, Josey Y. M. and Bautsch, Holly S. and Scott, Ingrid U. and Rosa, Robert H.},
title = {Low Vision: The Role of Visual Acuity in the Efficiency of Cursor Movement},
year = {2000},
isbn = {1581133138},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/354324.354327},
doi = {10.1145/354324.354327},
abstract = {Graphical user interfaces are one of the more prevalent interface types which exist today. The popularity of this interface type has caused problems for users with poor vision. Because usage strategies of low vision users differ from blind users, existing research focusing on blind users is not sufficient in describing the techniques employed by low vision users.The research presented here characterizes the interaction strategies of a particular set of low vision users, those with Age-related Macular Degeneration, using an analysis of cursor movement. The low vision users have been grouped according to the severity of their vision loss and then compared to fully sighted individuals, with respect to cursor movement efficiency.Results revealed that as the size of the icons on the computer screen increased, so did the performance of the fully sighted participants as well as the participants with AMD.},
booktitle = {Proceedings of the Fourth International ACM Conference on Assistive Technologies},
pages = {1–8},
numpages = {8},
keywords = {GUI, graphical user interface, search strategy, icon size, age-related macular degeneration, low vision, cursor movement},
location = {Arlington, Virginia, USA},
series = {Assets '00}
}

@article{janiszewski2006low,
  title={The Low Visibility of Low Vision: Increasing Awareness through Public Health Education},
  author={Janiszewski, Richard and Heath-Watson, Sharon L and Semidey, Abigail Y and Rosenthal, Arlene M and Do, Quyen},
  journal={Journal of Visual Impairment \& Blindness},
  volume={100},
  number={1\_suppl},
  pages={849--861},
  year={2006},
  doi={10.1177/0145482X0610001S08},
  url={https://journals.sagepub.com/doi/abs/10.1177/0145482X0610001S08},
}

@inproceedings{10.1145/1639642.1639663,
author = {Kane, Shaun K. and Jayant, Chandrika and Wobbrock, Jacob O. and Ladner, Richard E.},
title = {Freedom to Roam: A Study of Mobile Device Adoption and Accessibility for People with Visual and Motor Disabilities},
year = {2009},
isbn = {9781605585581},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1639642.1639663},
doi = {10.1145/1639642.1639663},
abstract = {Mobile devices provide people with disabilities new opportunities to act independently in the world. However, these empowering devices have their own accessibility challenges. We present a formative study that examines how people with visual and motor disabilities select, adapt, and use mobile devices in their daily lives. We interviewed 20 participants with visual and motor disabilities and asked about their current use of mobile devices, including how they select them, how they use them while away from home, and how they adapt to accessibility challenges when on the go. Following the interviews, 19 participants completed a diary study in which they recorded their experiences using mobile devices for one week. Our results show that people with visual and motor disabilities use a variety of strategies to adapt inaccessible mobile devices and successfully use them to perform everyday tasks and navigate independently. We provide guidelines for more accessible and empowering mobile device design.},
booktitle = {Proceedings of the 11th International ACM SIGACCESS Conference on Computers and Accessibility},
pages = {115–122},
numpages = {8},
keywords = {diary study, mobile phones, blindness, mobile devices, low vision, motor impairment, accessibility},
location = {Pittsburgh, Pennsylvania, USA},
series = {Assets '09}
}

@article{margrain2000helping,
  title={Helping blind and partially sighted people to read: the effectiveness of low vision aids},
  author={Margrain, Tom H},
  journal={Br J Ophthalmol},
  volume={84},
  number={8},
  pages={919--921},
  year={2000},
  month={Aug},
  doi={10.1136/bjo.84.8.919},
  PMID={10906105},
  PMCID={PMC1723574},
  url={https://bjo.bmj.com/content/84/8/919},
}

@article{massof2002model,
  title={A model of the prevalence and incidence of low vision and blindness among adults in the U.S.},
  author={Massof, Robert W},
  journal={Optom Vis Sci},
  volume={79},
  number={1},
  pages={31--38},
  year={2002},
  month={Jan},
  doi={10.1097/00006324-200201000-00010},
  PMID={11828896},
  url={https://journals.lww.com/optvissci/Abstract/2002/01000/A_Model_of_the_Prevalence_and_Incidence_of_Low.10.aspx},
}

@article{massof2002model,
  title={A model of the prevalence and incidence of low vision and blindness among adults in the U.S.},
  author={Massof, Robert W},
  journal={Optom Vis Sci},
  volume={79},
  number={1},
  pages={31--38},
  year={2002},
  month={Jan},
  doi={10.1097/00006324-200201000-00010},
  PMID={11828896},
  url={https://journals.lww.com/optvissci/Abstract/2002/01000/A_Model_of_the_Prevalence_and_Incidence_of_Low.10.aspx},
}

@article{scott2002impact,
  title={Impact of graphical user interface screen features on computer task accuracy and speed in a cohort of patients with age-related macular degeneration},
  author={Scott, Ingrid U and Feuer, William J and Jacko, Julie A},
  journal={Am J Ophthalmol},
  volume={134},
  number={6},
  pages={857--862},
  year={2002},
  month={Dec},
  doi={10.1016/s0002-9394(02)01795-6},
  PMID={12470754},
  url={https://www.sciencedirect.com/science/article/abs/pii/S0002939402017956},
}

@article{theofanos2005helping,
  title={Helping Low-vision and Other Users with Web Sites That Meet Their Needs: Is One Site for All Feasible?},
  author={Theofanos, Mary Frances and Redish, Janice (Ginny)},
  journal={Technical Communication},
  volume={52},
  number={1},
  pages={9--20},
  year={2005},
  month={February},
  publisher={Society for Technical Communication},
}

@article{watson1997national,
  title={National survey of the impact of low vision device use among veterans},
  author={Watson, Gordon R and De l'Aune, William and Stelmack, Joan and Maino, Joseph and Long, Sarah},
  journal={Optom Vis Sci},
  volume={74},
  number={5},
  pages={249--259},
  year={1997},
  month={May},
  doi={10.1097/00006324-199705000-00019},
  PMID={9219282},
}

@inproceedings{falase2019tactile,
author = {Falase, Olutayo and Siu, Alexa and Follmer, Sean},
year = {2019},
month = {10},
pages = {536-538},
title = {Tactile Code Skimmer: A Tool to Help Blind Programmers Feel the Structure of Code},
isbn = {978-1-4503-6676-2},
doi = {10.1145/3308561.3354616}
}

@article{10.1145/3480169,
author = {Das, Maitraye and Piper, Anne Marie and Gergle, Darren},
title = {Design and Evaluation of Accessible Collaborative Writing Techniques for People with Vision Impairments},
year = {2022},
issue_date = {April 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {29},
number = {2},
issn = {1073-0516},
url = {https://doi.org/10.1145/3480169},
doi = {10.1145/3480169},
abstract = {Collaborative writing tools have been used widely in professional and academic organizations for many years. Yet, there has not been much work to improve screen reader access in mainstream collaborative writing tools. This severely affects the way people with vision impairments collaborate in ability-diverse teams. As a step toward addressing this issue, the present article aims at improving screen reader representation of collaborative features such as comments and track changes (i.e., suggested edits). Building on our formative interviews with 20 academics and professionals with vision impairments, we developed auditory representations that indicate comments and edits using non-speech audio (e.g., earcons, tone overlay), multiple text-to-speech voices, and contextual presentation techniques. We then performed a systematic evaluation study with 48 screen reader users that indicated that non-speech audio, changing voices, and contextual presentation can potentially improve writers’ collaboration awareness. We discuss implications of these results for the design of accessible collaborative systems.},
journal = {ACM Trans. Comput.-Hum. Interact.},
month = {jan},
articleno = {9},
numpages = {42},
keywords = {Collaborative writing, screen readers, ability-diverse collaboration, vision impairments, non-speech audio}
}

@INPROCEEDINGS{9833098,
  author={Pandey, Maulishree and Bondre, Sharvari and O’Modhrain, Sile and Oney, Steve},
  booktitle={2022 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={Accessibility of UI Frameworks and Libraries for Programmers with Visual Impairments}, 
  year={2022},
  volume={},
  number={},
  pages={1-10},
  doi={10.1109/VL/HCC53370.2022.9833098}}

@inproceedings{10.1145/3517428.3544806,
author = {Mountapmbeme, Aboubakar and Okafor, Obianuju and Ludi, Stephanie},
title = {Accessible Blockly: An Accessible Block-Based Programming Library for People with Visual Impairments},
year = {2022},
isbn = {9781450392587},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3517428.3544806},
doi = {10.1145/3517428.3544806},
abstract = {The visual and mouse-centric nature of block-based programming environments generally make them inaccessible and challenging to use by users with visual impairments who rely on assistive technologies to interact with computers. This prevents these users from participating in programming activities where these systems are used. This paper presents a prototype of an accessible block-based programming library called Accessible Blockly that allows users to create and navigate block-based code using a screen reader and a keyboard. This is an attempt to make the famous Blockly library accessible through a screen reader and keyboard. In this paper, we present the design and implementation of Accessible Blockly. We also discuss the evaluation of the library for block-based code navigation in a study with 12 blind programmers. Analysis of the study results shows that Accessible Blockly effectively aids users with reading and understanding block-based code. Participants found Accessible Blockly easy to use and less frustrating for navigating block-based programs. The participants also expressed enthusiasm and interest in using the keyboard and screen reader to navigate block-based code and in the accessibility of block-based programming.},
booktitle = {Proceedings of the 24th International ACM SIGACCESS Conference on Computers and Accessibility},
articleno = {19},
numpages = {15},
keywords = {Screen Reader, Block-based programming, Blind Programmers, Keyboard Navigation, Blockly, Accessibility, Students with Visual Impairments},
location = {Athens, Greece},
series = {ASSETS '22}
}

@article{10.1145/3449203,
author = {Pandey, Maulishree and Kameswaran, Vaishnav and Rao, Hrishikesh V. and O'Modhrain, Sile and Oney, Steve},
title = {Understanding Accessibility and Collaboration in Programming for People with Visual Impairments},
year = {2021},
issue_date = {April 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {5},
number = {CSCW1},
url = {https://doi.org/10.1145/3449203},
doi = {10.1145/3449203},
abstract = {There has been a growing interest in Computer-Supported Cooperative Work and Human-Computer Interaction to understand the experiences of programmers in the workplace. However, the large majority of these studies has focused on sighted programmers and, as a result, the experiences of programmers with visual impairments in professional contexts remain understudied. We address this gap by reporting on findings from semi-structured interviews with 22 programmers with visual impairments. We found that programmers with visual impairments interact with a complex ecosystem of tools and a significant part of their job entails performing work to overcome the accessibility challenges inherent in this ecosystem. Furthermore, we find that the visual nature of various programming activities impedes collaboration, which necessitates the co-creation of new work practices through a series of sociotechnical interactions. These sociotechnical interactions often require invisible work and articulation work on the part of the programmers with visual impairments.},
journal = {Proc. ACM Hum.-Comput. Interact.},
month = {apr},
articleno = {129},
numpages = {30},
keywords = {social accessibility, accessibility, collaborative software development, collaborative accessibility, help-seeking, collaborative programming, programming}
}

@inproceedings{10.1145/3526113.3545620,
author = {Ehtesham-Ul-Haque, Md and Monsur, Syed Mostofa and Billah, Syed Masum},
title = {Grid-Coding: An Accessible, Efficient, and Structured Coding Paradigm for Blind and Low-Vision Programmers},
year = {2022},
isbn = {9781450393201},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3526113.3545620},
doi = {10.1145/3526113.3545620},
abstract = {Sighted programmers often rely on visual cues (e.g., syntax coloring, keyword highlighting, code formatting) to perform common coding activities in text-based languages (e.g., Python). Unfortunately, blind and low-vision (BLV) programmers hardly benefit from these visual cues because they interact with computers via assistive technologies (e.g., screen readers), which fail to communicate visual semantics meaningfully. Prior work on making text-based programming languages and environments accessible mostly focused on code navigation and, to some extent, code debugging, but not much toward code editing, which is an essential coding activity. We present Grid-Coding to fill this gap. Grid-Coding renders source code in a structured 2D grid, where each row, column, and cell have consistent, meaningful semantics. Its design is grounded on prior work and refined by 28 BLV programmers through online participatory sessions for 2 months. We implemented the Grid-Coding prototype as a spreadsheet-like web application for Python and evaluated it with a study with 12 BLV programmers. This study revealed that, compared to a text editor (i.e., the go-to editor for BLV programmers), our prototype enabled BLV programmers to navigate source code quickly, find the context of a statement easily, detect syntax errors in existing code effectively, and write new code with fewer syntax errors. The study also revealed how BLV programmers adopted Grid-Coding and demonstrated novel interaction patterns conducive to increased programming productivity.},
booktitle = {Proceedings of the 35th Annual ACM Symposium on User Interface Software and Technology},
articleno = {44},
numpages = {21},
keywords = {Python, assistive technology, blind and low-vision, programming languages, programmers., code writing, text-based programming languages, code reading, screen readers, grid-coding, Accessibility},
location = {Bend, OR, USA},
series = {UIST '22}
}

@inproceedings{10.1145/3517428.3544812,
author = {Potluri, Venkatesh and Pandey, Maulishree and Begel, Andrew and Barnett, Michael and Reitherman, Scott},
title = {CodeWalk: Facilitating Shared Awareness in Mixed-Ability Collaborative Software Development},
year = {2022},
isbn = {9781450392587},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3517428.3544812},
doi = {10.1145/3517428.3544812},
abstract = {COVID-19 accelerated the trend toward remote software development, increasing the need for tightly-coupled synchronous collaboration. Existing tools and practices impose high coordination overhead on blind or visually impaired (BVI) developers, impeding their abilities to collaborate effectively, compromising their agency, and limiting their contribution. To make remote collaboration more accessible, we created CodeWalk, a set of features added to Microsoft’s Live Share VS Code extension, for synchronous code review and refactoring. We chose design criteria to ease the coordination burden felt by BVI developers by conveying sighted colleagues’ navigation and edit actions via sound effects and speech. We evaluated our design in a within-subjects experiment with 10 BVI developers. Our results show that CodeWalk streamlines the dialogue required to refer to shared workspace locations, enabling participants to spend more time contributing to coding tasks. This design offers a path towards enabling BVI and sighted developers to collaborate on more equal terms.},
booktitle = {Proceedings of the 24th International ACM SIGACCESS Conference on Computers and Accessibility},
articleno = {20},
numpages = {16},
keywords = {accessibility, sound effects, blind or visually impaired, collaboration, workspace awareness, software developers},
location = {Athens, Greece},
series = {ASSETS '22}
}

@inproceedings{10.1145/3411764.3445090,
author = {Storer, Kevin M and Sampath, Harini and Merrick, M. Alice Alice},
title = {”It’s Just Everything Outside of the IDE That’s the Problem”: Information Seeking by Software Developers with Visual Impairments},
year = {2021},
isbn = {9781450380966},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3411764.3445090},
doi = {10.1145/3411764.3445090},
abstract = {Many efforts to increase accessibility in coding for developers with visual impairments (DWVI) focus on supporting interactions with development tools. But, to understand how to appropriately modify and write source code, developers must seek information from a variety of disparate and highly technical sources. DWVI might benefit from technological support in this process. But, it is unclear what accessibility issues arise in technical information sources, whether accessibility impacts strategies for seeking technical information, or how best to support DWVI in information seeking. We conducted observations and interviews with twelve DWVI, to explore their information behaviors. We found that DWVI seek information in many of the same sources as their sighted peers, and accessibility issues in technical information sources were similar to those in nontechnical sources. But, despite these similarities, examining development as an information seeking process highlighted the role of contextual and social factors in determining accessibility for DWVI.},
booktitle = {Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems},
articleno = {487},
numpages = {12},
keywords = {Software Development, Visual Impairments, Information Behavior, Accessibility},
location = {Yokohama, Japan},
series = {CHI '21}
}


@inproceedings{10.1145/3526114.3558649,
author = {Ehtesham-Ul-Haque, Md and Monsur, Syed Mostofa and Billah, Syed Masum},
title = {Demonstration of Grid-Coding: An Accessible, Efficient, and Structured Coding Paradigm for Blind and Low-Vision Programmers},
year = {2022},
isbn = {9781450393218},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3526114.3558649},
doi = {10.1145/3526114.3558649},
abstract = {We demonstrate Grid Editor, an implementation of our novel Grid-Coding paradigm for addressing code navigation, editing, and associated challenges for blind and low-vision (BLV) programmers with text-based programming. Grid Editor is implemented as a spreadsheet-like web application to render Python code in a structured 2D grid. The Editor represents a single line with a row, a single scope with a column, and replaces traditional whitespace-based indentation with meaningful indentation cells. As a result, Grid-Editor supports quickly navigating source code to find context, detecting syntax errors, managing indentation, and writing syntax-error-free source code.},
booktitle = {Adjunct Proceedings of the 35th Annual ACM Symposium on User Interface Software and Technology},
articleno = {115},
numpages = {3},
keywords = {grid-coding, Python, code writing, programming languages, programmers, blind and low-vision, Accessibility},
location = {Bend, OR, USA},
series = {UIST '22 Adjunct}
}

@INPROCEEDINGS{9240634,
  author={Huff, Earl W. and Boateng, Kwajo and Moster, Makayla and Rodeghero, Paige and Brinkley, Julian},
  booktitle={2020 IEEE International Conference on Software Maintenance and Evolution (ICSME)}, 
  title={Examining The Work Experience of Programmers with Visual Impairments}, 
  year={2020},
  volume={},
  number={},
  pages={707-711},
  doi={10.1109/ICSME46990.2020.00077}}


@article{10.1145/3507469,
author = {Mountapmbeme, Aboubakar and Okafor, Obianuju and Ludi, Stephanie},
title = {Addressing Accessibility Barriers in Programming for People with Visual Impairments: A Literature Review},
year = {2022},
issue_date = {March 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {15},
number = {1},
issn = {1936-7228},
url = {https://doi.org/10.1145/3507469},
doi = {10.1145/3507469},
abstract = {Accessibility issues with programming languages and programming environments pose a major barrier for students with visual impairments to participate in computing related courses as well as threatens the productivity of professional programmers with visual impairments. To remedy this, the past two decades have witnessed an increase in accessibility research designed to investigate and address the challenges faced by people with visual impairments while programming or learning how to program. We conducted a literature review of accessibility research in this domain. The aim was to identify, aggregate, and highlight known accessibility barriers to programming faced by professional programmers and students with visual impairments learning how to code as well as to identify all solutions that have been proposed to address these barriers. We selected and analyzed 70 papers reporting on accessibility of programming and programming environments for people with visual impairments. Numerous barriers to programming by people with visual impairments have been identified in the literature. Some of these barriers are understudied and present opportunities for future work. A lot of studies have also proposed tools and new accessible programming languages to address the accessibility issues of current programming languages and programming environments.},
journal = {ACM Trans. Access. Comput.},
month = {mar},
articleno = {7},
numpages = {26},
keywords = {accessible computing, Accessibility, programming languages, assistive technologies, blind programmers, visual impairments}
}

@article{10.1145/3178412.3178414,
author = {Albusays, Khaled},
title = {Exploring Auditory Cues to Locate Code Errors and Enhance Navigation for Developers Who Are Blind},
year = {2018},
issue_date = {January 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
number = {120},
issn = {1558-2337},
url = {https://doi.org/10.1145/3178412.3178414},
doi = {10.1145/3178412.3178414},
abstract = {The goal of my research is to support the workflow of programmers who are blind; prior work has found that these users face challenges in using screen-readers to locate errors and debug software code. Recent advancements in auditory cues have made them a potential candidate for providing useful feedback to both sighted and visually impaired users, but little known about the effectiveness and the usability of such cues for blind programmers. I propose to investigate the efficiency of two different auditory techniques, to locate code errors and reduce the amount of time required to navigate through lengthy codebases. I will compare learning rates for Earcons (hierarchical representations of musical tones) and Spearcons (compressed speech) as potential candidates for the auditory feedback system. My research aim is to understand the proper way to implement usable auditory cues for these users. This document describes my research motivations, proposed research plan, current progress, and the potential contribution to the field of software engineering and accessibility for blind programmers.},
journal = {SIGACCESS Access. Comput.},
month = {jan},
pages = {11–15},
numpages = {5}
}

@inproceedings{10.1145/3373625.3417998,
author = {Mountapmbeme, Aboubakar and Ludi, Stephanie},
title = {Investigating Challenges Faced by Learners with Visual Impairments Using Block-Based Programming/Hybrid Environments},
year = {2020},
isbn = {9781450371032},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3373625.3417998},
doi = {10.1145/3373625.3417998},
abstract = {With an increase in the use of block-based programming environments in k-12 curriculum, the need for accessibility exists in order to serve all students. Accessible block-based systems are in their infancy. Such systems would provide students with visual impairments the opportunity to learn programming and take part in computational thinking activities using the same systems that are found appealing to most sighted learners. However, with the presence of these systems little is known about their long-term use in the educational milieu. As a result, we conducted a survey with twelve teachers of students with visual impairments to learn about the use of these systems in teaching their students and to understand the barriers that students face in the learning process. Our study reveals that only one block-based programming environment is common among teachers and that several challenges exist. These challenges range from limited learners’ preparedness through difficulties editing and navigating code, to ineffective system feedback.},
booktitle = {Proceedings of the 22nd International ACM SIGACCESS Conference on Computers and Accessibility},
articleno = {73},
numpages = {4},
keywords = {programming, Block-based programming, visually impaired, challenges},
location = {Virtual Event, Greece},
series = {ASSETS '20}
}

@inproceedings{10.1145/3441852.3471221,
author = {Mountapmbeme, Aboubakar and Ludi, Stephanie},
title = {How Teachers of the Visually Impaired Compensate with the Absence of Accessible Block-Based Languages},
year = {2021},
isbn = {9781450383066},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3441852.3471221},
doi = {10.1145/3441852.3471221},
abstract = {The past five years have witnessed an increase in research to improve the accessibility of block-based programming environments to people with visual impairments. This has led to the creation of a few accessible block-based programming environments with some researchers considering tangible alternatives or hybrid environments. However, the literature says little about the learning experiences of K-12 students with visual impairments on these systems in educational settings. We try to fill this gap of knowledge with a report on an interview study with twelve teachers of K-12 students with visual impairments. Through the lens of the teachers, we discovered that factors such as the students background, the teacher's CS background and the design of existing curricula influence the learning process of students with visual impairments learning how to code. In addition to discussing how they go about to mitigate the challenges that stem from these factors, teachers also reported on how they compensate for the lack of accessible block-based languages. Through this work, we offer insights into how the research community can improve the learning experiences of students with visual impairments including training teachers, ensuring students have basic computing skills, improving the curriculum and designing accessible on-screen block-based programming environments.},
booktitle = {Proceedings of the 23rd International ACM SIGACCESS Conference on Computers and Accessibility},
articleno = {4},
numpages = {10},
keywords = {K-12 computing, Programming, Visually impaired, Accessible Computing, Block-based programming},
location = {Virtual Event, USA},
series = {ASSETS '21}
}

@INPROCEEDINGS{7522265,
  author={Konecki, Mario and Ivković, Nikola and Kaniški, Matija},
  booktitle={2016 39th International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO)}, 
  title={Making programming education more accessible for visually impaired}, 
  year={2016},
  volume={},
  number={},
  pages={887-890},
  doi={10.1109/MIPRO.2016.7522265}}


@inproceedings{10.1145/3550356.3561591,
author = {Anderson, Lachlan and Barker, Briana and Reid, Alice and Lin, Kaijie and Khalajzadeh, Hourieh and Grundy, John},
title = {Node-Read: A Visually Accessible Low-Code Software Development Extension},
year = {2022},
isbn = {9781450394673},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3550356.3561591},
doi = {10.1145/3550356.3561591},
abstract = {Low-code software development environments are reliant on spatial and graphical user interfaces. As a result, many of these tools are in some way inaccessible to the visually impaired, and very few of these tools are built with visual accessibility in mind. In this paper, we evaluate the accessibility of existing low-code Integrated Development Environments (IDEs), for persons with partial or distorted vision. The aim of this study is to motivate making citizen/end-user software development accessible for users who are reliant on screen readers. We conducted a preliminary review of several low-code development environments which were open source and had a large existing user base, and identified that browser-based low-code IDEs did not integrate well with screen reader software. An extension of an open-source software, Node-RED, was created, as it was found to be suitable to our selection criteria. The extension, referred to as "Node-Read", focuses on improving compatibility with JAWS and NVDA screen readers. Node-Read's keyboard shortcuts, along with their inclusion in critical user documentation, were reported by study participants to be helpful in the basic operation of the software.},
booktitle = {Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings},
pages = {808–815},
numpages = {8},
location = {Montreal, Quebec, Canada},
series = {MODELS '22}
}

@article{10.1145/3555609,
author = {Shinohara, Kristen and Tamjeed, Murtaza and McQuaid, Michael and Barkins, Dymen A.},
title = {Usability, Accessibility and Social Entanglements in Advanced Tool Use by Vision Impaired Graduate Students},
year = {2022},
issue_date = {November 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {6},
number = {CSCW2},
url = {https://doi.org/10.1145/3555609},
doi = {10.1145/3555609},
abstract = {Despite increasing work investigating the accessibility of research tools, most accessibility research has traditionally focused on popular, mainstream, or web technologies. We investigated barriers and workarounds blind and low vision doctoral students in computing-intensive disciplines experienced and engaged, respectively, when using advanced technical tools for research tasks. We conducted an observation and interview study with eight current and former Ph.D. students, closely analyzing the accessibility of specific tasks. Our findings contextualize how inaccessible tools complicate research tasks, adding time and effort, and exacerbating social entanglements in collaborative relationships. This work contributes empirical data that extricates how in/accessibility of advanced technical tools used in research influences productivity and collegial efforts.},
journal = {Proc. ACM Hum.-Comput. Interact.},
month = {nov},
articleno = {551},
numpages = {21},
keywords = {workflows, higher education, technical tools, accessibility}
}

@article{10.1145/3561391,
author = {van der Meulen, Anna and Hartendorp, Mijke and Voorn, Wendy and Hermans, Felienne},
title = {The Perception of Teachers on Usability and Accessibility of Programming Materials for Children with Visual Impairments},
year = {2022},
issue_date = {March 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {23},
number = {1},
url = {https://doi.org/10.1145/3561391},
doi = {10.1145/3561391},
abstract = {Programming education is strongly emerging in elementary and high school. Diversity and inclusion are important topics, however, insights on suited programming materials for younger learners with visual impairments are lacking. A wide range of programming materials for children exists, diverse in both what is being programmed (output) and how this is done (input), yet often relying on visual features. An understanding of the usability and accessibility aspects of these different materials is important to inform educational practice and to increase understanding of what makes programming materials suited for low vision and blind children. The aim of this study is to explore the usability and accessibility of programming materials currently used in education to low vision and blind children in the Netherlands. A focus group was conducted with six teachers or IT experts, all working with the target group in special education. The thematic analysis of the discussion of 25 materials (including unplugged lessons, robots and robotic kits, block-based and text-based languages) showed the potential of several materials, especially unplugged lessons, and the continuing search for suited materials and workforms specifically for the blind children. Furthermore, prioritizing “fun” and close connections to children’s daily life as well as careful explorations of usability at the cognitive level came forward as important factors for future research and development in programming materials for low vision and blind children. These insights can contribute to obtaining an inclusive approach to programming for young learners.},
journal = {ACM Trans. Comput. Educ.},
month = {dec},
articleno = {14},
numpages = {21},
keywords = {Children’s programming materials, usability and accessibility, visual impairments}
}

@article{10.1145/3585315,
author = {Kearney-Volpe, Claire and Fleet, Chancey and Ohshiro, Keita and Alfaro Arias, Veronica and Hao Xu, Eric and Hurst, Amy},
title = {Tangible Progress: Tools, Techniques, and Impacts of Teaching Web Development to Screen Reader Users},
year = {2023},
issue_date = {March 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {16},
number = {1},
issn = {1936-7228},
url = {https://doi.org/10.1145/3585315},
doi = {10.1145/3585315},
abstract = {Despite a growing demand for Web Development and adjacent tech skills, there is a lack of accessible skills training for screen reader users. To address this gap, we developed tools and techniques to support screen reader users in learning web development. In this article, we describe our design, implementation, and evaluation of a nine-week web development workshop, designed to introduce screen reader users to HTML, CSS, and JavaScript. We taught the remote workshop using synchronous lectures followed by one-on-one time with Teaching Assistants (TAs) and included a resource-rich website, tactile diagrams, and discussion forum. We evaluated the effectiveness of our tools and the impact of the workshop during, immediately following, and one year after the workshop. At its conclusion, students demonstrated their knowledge of web development basics by creating and publishing their own websites; showed an increase in self-efficacy; and maintained a high level of interest in the subject. Participation also benefited TAs who reported increased confidence in understanding accessibility concepts, increased interest in pursuing work related to accessibility, and plans to apply what they learned. One year after the workshop, both students and TAs reported a lasting impact. Most notably, students had applied their understanding of design concepts, reported that the workshop helped them prepare for career changes or helped them in their current job functions, and that it gave them both the language and confidence to problem-solve web and accessibility issues. TAs felt that the workshop broadened their understanding of blind students’ abilities; especially when provided with accessible materials and tools, it gave them a better understanding of digital accessibility and assistive technologies, and they shared examples of how they continue to apply learnings and advocate for accessibility. Based on these findings, we recommend techniques and tools to support screen reader users’ learning web development, the inclusion of job-focused sub-topics, and suggestions for engaging with post-secondary institutions to pair service learning with tech skills training. We close with recommendations for implementing and adapting the workshop using our open-educational materials to expand the availability and breadth of accessible tech skills training and co-learning experiences for post-secondary students.},
journal = {ACM Trans. Access. Comput.},
month = {mar},
articleno = {8},
numpages = {33},
keywords = {blind programmers, Accessibility, accessible web design, accessible web development, human-centered computing, screen reader}
}


@Article{su12135320,
AUTHOR = {Alotaibi, Hind and S. Al-Khalifa, Hend and AlSaeed, Duaa},
TITLE = {Teaching Programming to Students with Vision Impairment: Impact of Tactile Teaching Strategies on Student’s Achievements and Perceptions},
JOURNAL = {Sustainability},
VOLUME = {12},
YEAR = {2020},
NUMBER = {13},
ARTICLE-NUMBER = {5320},
URL = {https://www.mdpi.com/2071-1050/12/13/5320},
ISSN = {2071-1050},
ABSTRACT = {The United Nations (UN) 2030 agenda involved 17 Sustainable Development Goals (SDGs) to achieve a better and more sustainable world for all. The fourth Sustainable Development Goal called for &ldquo;ensuring inclusive and equitable quality education and promoting lifelong learning opportunities for all&rdquo;. Despite international efforts to achieve such a goal, many students with vision impairment (VI) who wish to pursue a degree in computer science face significant challenges and must overcome social and technical obstacles. One challenge is learning how to program as a key skill for pursuing a degree in the field of computer science. This paper explores practical issues in teaching students with VI the basics of programming and presents recommended practices based on a suggested workshop setup. The workshop ran for three weeks, for a total of 60 teaching hours, and involved designing and implementing complete curricula and multi-modal activities to simplify the acquisition of basic programming concepts. Workshop data was collected using several data collection methods&mdash;i.e., interviews, observation, questionnaires, performance records, and daily journals. The results indicated an improvement in participants&rsquo; programming skills, which was detected through their performance records and final project evaluations. The participants also showed a high interest in learning programming and positive attitudes towards the experience. However, the participants&rsquo; experience also involved some challenges such as understanding abstract concepts, code navigation, and some technical issues. The study is hoped to contribute to the literature on education inclusion and to bridge the digital divide in our society.},
DOI = {10.3390/su12135320}
}

@INPROCEEDINGS{8783291,
  author={Blas, María Julia and Golobisky, María Fernanda and Castellaro, Marta and García Lozano, Diego Alejandro},
  booktitle={2018 XIII Latin American Conference on Learning Technologies (LACLO)}, 
  title={Accessibility at the University: An Experience on How Teaching Programming to Blind Students}, 
  year={2018},
  volume={},
  number={},
  pages={165-172},
  doi={10.1109/LACLO.2018.00042}}




@inproceedings{Matti2017PreservingTS,
  title={Preserving the Spatial Information of Accessible UML Class Diagrams for the Visually Impaired},
  author={Silva Hekmat Matti},
  year={2017},
  url={https://api.semanticscholar.org/CorpusID:57201940}
}

@inproceedings{10.1145/3526114.3558641,
author = {Li, Jiasheng and Yan, Zeyu and Jarjue, Ebrima Haddy and Shetty, Ashrith and Peng, Huaishu},
title = {Demonstration of TangibleGrid: A Tangible Web Layout Design Tool for Blind Users},
year = {2022},
isbn = {9781450393218},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3526114.3558641},
doi = {10.1145/3526114.3558641},
abstract = {In this demonstration, We showcase TangibleGrid [4], a novel device that allows blind users to understand and design the web page layout with real-time tangible and audio feedback. Our device contains shape-changing brackets representing the web elements and a baseboard representing the web page canvas. Blind users can understand web page layout by feeling the brackets’ type, size, and location on the baseboard. They can also design a web page layout through creating and editing web elements by snapping or adjusting tangible brackets on top of the baseboard.},
booktitle = {Adjunct Proceedings of the 35th Annual ACM Symposium on User Interface Software and Technology},
articleno = {112},
numpages = {3},
keywords = {visual impairment, Accessible web design, accessibility, tactile feedback, tangible user interface},
location = {Bend, OR, USA},
series = {UIST '22 Adjunct}
}

@article{10.1145/2533682.2533683,
author = {Ferres, Leo and Lindgaard, Gitte and Sumegi, Livia and Tsuji, Bruce},
title = {Evaluating a Tool for Improving Accessibility to Charts and Graphs},
year = {2013},
issue_date = {November 2013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {5},
issn = {1073-0516},
url = {https://doi.org/10.1145/2533682.2533683},
doi = {10.1145/2533682.2533683},
abstract = {This article reports a case study of the iterative design and evaluation of a natural language-driven assistive technology, iGraph-Lite, providing people who are blind access to line graphs. Two laboratory-based usability studies involving blind and sighted people are presented with a discussion of the ensuing implementation of changes. Blind participants were found to adopt different graph interrogation strategies than sighted participants. A small field study is then reported in which a blind user who works with graphs took part to determine the degree to which the iGraph-Lite commands would meet the needs of blind graph experts. The final study invited sighted graph experts and novices to visually inspect and explain a set of line graphs comparable to those used in the usability studies. It aimed to highlight the concepts and the range of words sighted people use, to ascertain the appropriateness of the iGraph-Lite lexicon. A set of preliminary guidelines is presented.},
journal = {ACM Trans. Comput.-Hum. Interact.},
month = {nov},
articleno = {28},
numpages = {32},
keywords = {statistical graphs, Accessibility (blind and visually impaired), natural language interaction}
}


@inproceedings{10.1145/3392063.3394437,
author = {Pires, Ana Cristina and Rocha, Filipa and de Barros Neto, Antonio Jos\'{e} and Sim\~{a}o, Hugo and Nicolau, Hugo and Guerreiro, Tiago},
title = {Exploring Accessible Programming with Educators and Visually Impaired Children},
year = {2020},
isbn = {9781450379816},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3392063.3394437},
doi = {10.1145/3392063.3394437},
abstract = {Previous attempts to make block-based programming accessible to visually impaired children have mostly focused on audio-based challenges, leaving aside spatial constructs, commonly used in learning settings. We sought to understand the qualities and flaws of current programming environments in terms of accessibility in educational settings. We report on a focus group with IT and special needs educators, where they discussed a variety of programming environments for children, identifying their merits, barriers and opportunities. We then conducted a workshop with 7 visually impaired children where they experimented with a bespoke tangible robot-programming environment. Video recordings of such activity were analyzed with educators to discuss children's experiences and emergent behaviours. We contribute with a set of qualities that programming environments should have to be inclusive to children with different visual abilities, insights for the design of situated classroom activities, and evidence that inclusive tangible robot-based programming is worth pursuing.},
booktitle = {Proceedings of the Interaction Design and Children Conference},
pages = {148–160},
numpages = {13},
keywords = {visual impairments, tangible, accessible, programming, robots, educators, children},
location = {London, United Kingdom},
series = {IDC '20}
}

@article{Morrison2018TorinoAT,
  title={Torino: A Tangible Programming Language Inclusive of Children with Visual Disabilities},
  author={Cecily Morrison and Nicolas Villar and Anja Thieme and Zahra Ashktorab and Eloise Taysom and Oscar Salandin and Daniel Cletheroe and Greg Saul and Alan F. Blackwell and Darren Edge and Martin Grayson and Haiyan Zhang},
  journal={Human–Computer Interaction},
  year={2018},
  volume={35},
  pages={191 - 239},
  url={https://api.semanticscholar.org/CorpusID:69684305}
}

@article{Pires2020ExploringAP,
  title={Exploring accessible programming with educators and visually impaired children},
  author={Ana Cristina Pires and Filipa Rocha and Ant{\'o}nio Neto and Hugo Sim{\~a}o and Hugo Nicolau and Tiago Guerreiro},
  journal={Proceedings of the Interaction Design and Children Conference},
  year={2020},
  url={https://api.semanticscholar.org/CorpusID:219688982}
}

@article{Pires2023TACTOPIEP,
  title={TACTOPI: Exploring Play with an Inclusive Multisensory Environment for Children with Mixed-Visual Abilities},
  author={Ana Cristina Pires and L{\'u}cia Ver{\'o}nica Abreu and Filipa Rocha and Hugo Sim{\~a}o and Jo{\~a}o Guerreiro and Hugo Nicolau and Tiago Jo{\~a}o Vieira Guerreiro},
  journal={Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
  year={2023},
  url={https://api.semanticscholar.org/CorpusID:259149357}
}

@article{Mountapmbeme2022AddressingAB,
  title={Addressing Accessibility Barriers in Programming for People with Visual Impairments: A Literature Review},
  author={Aboubakar Mountapmbeme and Obianuju Okafor and Stephanie Ludi},
  journal={ACM Transactions on Accessible Computing (TACCESS)},
  year={2022},
  volume={15},
  pages={1 - 26},
  url={https://api.semanticscholar.org/CorpusID:247585144}
}

@article{Kim2023TangiblePL,
  title={Tangible Programming Learning System (TPLS) for Programming Class with Visually Impaired and Sighted Students},
  author={Sean Kim and Seung-mee Lee and Seok-Ju Chun and Jeong-Hyeon Seo},
  journal={International Journal of Information and Education Technology},
  year={2023},
  url={https://api.semanticscholar.org/CorpusID:259431162}
}

@article{Schanzer2019AccessibleAP,
  title={Accessible AST-Based Programming for Visually-Impaired Programmers},
  author={Emmanuel Schanzer and Sina Bahram and Shriram Krishnamurthi},
  journal={Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  year={2019},
  url={https://api.semanticscholar.org/CorpusID:67866393}
}

@article{Schanzer2020AdaptingSI,
  title={Adapting Student IDEs for Blind Programmers},
  author={Emmanuel Schanzer and Sina Bahram and Shriram Krishnamurthi},
  journal={Proceedings of the 20th Koli Calling International Conference on Computing Education Research},
  year={2020},
  url={https://api.semanticscholar.org/CorpusID:227121382}
}

@article{Wang2023VirtualSC,
  title={Virtual Summer Camp for High School Students with Disabilities - An Experience Report},
  author={Wei Wang and Kathy B. Ewoldt and Mimi Xie and Alberto M. Mestas-Nu{\~n}ez and Sean Soderman and Jeffrey Wang},
  journal={Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
  year={2023},
  url={https://api.semanticscholar.org/CorpusID:257311605}
}

@article{Stefik2019ComputerSP,
  title={Computer Science Principles for Teachers of Blind and Visually Impaired Students},
  author={Andreas Stefik and Richard E. Ladner and William Allee and Sean P. Mealin},
  journal={Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
  year={2019},
  url={https://api.semanticscholar.org/CorpusID:67866481}
}

@article{Ladner2020ComputerSP,
  title={Computer Science Principles for Teachers of Deaf Students},
  author={Richard E. Ladner and Andreas Stefik and Jill Naumann and Erin Peach},
  journal={2020 Research on Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT)},
  year={2020},
  volume={1},
  pages={1-4},
  url={https://api.semanticscholar.org/CorpusID:228093357}
}

@article{Strassman2019TeachingAL,
  title={Teaching Academic Language to d/Deaf Students: Does Research Offer Evidence for Practice?},
  author={Barbara K. Knar Zahra Strassman and Knar Marashian and Zahra Memon},
  journal={American Annals of the Deaf},
  year={2019},
  volume={163},
  pages={501 - 533},
  url={https://api.semanticscholar.org/CorpusID:73445178}
}

@article{Mountapmbeme2021HowTO,
  title={How Teachers of the Visually Impaired Compensate with the Absence of Accessible Block-Based Languages},
  author={Aboubakar Mountapmbeme and Stephanie Ludi},
  journal={Proceedings of the 23rd International ACM SIGACCESS Conference on Computers and Accessibility},
  year={2021},
  url={https://api.semanticscholar.org/CorpusID:239011763}
}

@article{Kim2022DevelopmentOT,
  title={Development of Tangible Programming Learning System for Visually Impaired People},
  author={Sean Kim and Seok-Ju Chun},
  journal={The Journal of Korean Institute of Information Technology},
  year={2022},
  url={https://api.semanticscholar.org/CorpusID:247877067}
}

@article{AlOtaibi2020TeachingPT,
  title={Teaching Programming to Students with Vision Impairment: Impact of Tactile Teaching Strategies on Student’s Achievements and Perceptions},
  author={Hind M. Al-Otaibi and Hend Suliman Al-Khalifa and Duaa Alsaeed},
  journal={Sustainability},
  year={2020},
  url={https://api.semanticscholar.org/CorpusID:225604155}
}

@article{Kapucu2022ExploringCS,
  title={Exploring constant speed with a visually impaired student by using a smartphone},
  author={Serkan Kapucu and Aydın Kızılaslan},
  journal={Science Activities},
  year={2022},
  volume={59},
  pages={32 - 46},
  url={https://api.semanticscholar.org/CorpusID:248267506}
}

@article{Koehler2019StudentsWV,
  title={Students with Visual Impairments' Access and Participation in the Science Curriculum: Views of Teachers of Students with Visual Impairments},
  author={Karen E. Koehler and Tiffany Wild},
  journal={Journal of Science Education for Students with Disabilities},
  year={2019},
  url={https://api.semanticscholar.org/CorpusID:200077939}
}

@article{Akarsu2022AnIT,
  title={An inclusive tactile based STEM activity for students with visual impairment: an electromagnet design},
  author={Murat Akarsu and Aydın Kızılaslan and Onder Simsek},
  journal={Science Activities},
  year={2022},
  volume={58},
  pages={183 - 200},
  url={https://api.semanticscholar.org/CorpusID:246445323}
}

@article{Kzlaslan2019AHC,
  title={A hands-on classroom activity to teach science concepts for students with visual impairment},
  author={Aydın Kızılaslan and Seraceddin Levent Zorluoğlu and Mustafa S{\"o}zbilir},
  journal={Science Activities},
  year={2019},
  url={https://api.semanticscholar.org/CorpusID:216168982}
}

@article{Kzlaslan2020ImproveLW,
  title={Improve learning with hands-on classroom activities: science instruction for students with visual impairments},
  author={Aydın Kızılaslan and Seraceddin Levent Zorluoğlu and Mustafa Sozbilir},
  journal={European Journal of Special Needs Education},
  year={2020},
  volume={36},
  pages={371 - 392},
  url={https://api.semanticscholar.org/CorpusID:216290384}
}

@article{Tsinajinie2020AnOP,
  title={An Outdoor Project-Based Learning Program: Strategic Support and the Roles of Students with Visual Impairments Interested in STEM},
  author={Garrison Tsinajinie and Sevgi Kirboyun and Sunggye Hong},
  journal={Journal of Science Education and Technology},
  year={2020},
  volume={30},
  pages={74 - 86},
  url={https://api.semanticscholar.org/CorpusID:254753763}
}

@article{2023IMPROVINGSP,
  title={IMPROVING SCIENCE PROCESS SKILLS OF STUDENTS WITH MILD INTELLECTUAL DISABILITIES},
  author={},
  journal={Journal of Baltic Science Education},
  year={2023},
  url={https://api.semanticscholar.org/CorpusID:258128352}
}

@article{Milne2018Blocks4AllOA,
  title={Blocks4All: Overcoming Accessibility Barriers to Blocks Programming for Children with Visual Impairments},
  author={Lauren R. Milne and Richard E. Ladner},
  journal={Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems},
  year={2018},
  url={https://api.semanticscholar.org/CorpusID:5068415}
}

@article{Villar2019PhysicalPF,
  title={Physical Programming for Blind and Low Vision Children at Scale},
  author={Nicolas Villar and Cecily Morrison and Daniel Cletheroe and Tim Regan and Anja Thieme and Greg Saul},
  journal={Extended Abstracts of the 2019 CHI Conference on Human Factors in Computing Systems},
  year={2019},
  url={https://api.semanticscholar.org/CorpusID:144207628}
}

@article{Rocha2021AccemblyAH,
  title={Accembly at Home: Accessible Spatial Programming for Children with Visual Impairments and their Families},
  author={Filipa Rocha and Ana Cristina Pires and Isabel Neto and Hugo Nicolau and Tiago Guerreiro},
  journal={Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
  year={2021},
  url={https://api.semanticscholar.org/CorpusID:235628533}
}

@article{Rocha2023CodingTO,
  title={Coding Together: On Co-located and Remote Collaboration between Children with Mixed-Visual Abilities},
  author={Filipa Rocha and Filipa Correia and Isabel Neto and Ana Cristina Pires and Jo{\~a}o Guerreiro and Tiago Guerreiro and Hugo Nicolau},
  journal={Proceedings of the 2023 CHI Conference on Human Factors in Computing Systems},
  year={2023},
  url={https://api.semanticscholar.org/CorpusID:258217291}
}

@MISC{GPT,
        TITLE     = {{OpenAI}},
        HOWPUBLISHED = {https://openai.com/},
        KEY       = {GPT},
}